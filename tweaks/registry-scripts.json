{
  "version": "2025-10-30T22:26:24.905Z",
  "tweaks": [
    {
      "id": "align-taskbar-left",
      "title": "Align Taskbar Left",
      "description": "Aligns the taskbar to the left side of the screen.",
      "category": ["General", "Appearance"],
      "recommended": false,
      "reversible": true,
      "docsurl": "https://docs.getsparkle.net/tweaks/align-taskbar-left",
      "source": "https://github.com/Parcoil/Sparkle/blob/v2/tweaks/align-taskbar-left/meta.json",
      "scripts": {
        "apply": "Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\" -Name \"TaskbarAl\" -Type DWord -Value 0\n",
        "unapply": "Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\" -Name \"TaskbarAl\" -Type DWord -Value 1\n"
      }
    },
    {
      "id": "debloat-windows",
      "title": "Debloat Windows",
      "description": "Choose between Sparkle Debloat script or Raphire's Win11Debloat script to remove built-in Windows apps and bloatware.",
      "category": ["Performance", "Privacy"],
      "recommended": true,
      "reversible": false,
      "updatedversion": "2.9.0",
      "docsurl": "https://docs.getsparkle.net/tweaks/debloat-windows",
      "source": "https://github.com/Parcoil/Sparkle/blob/v2/tweaks/debloat-windows/meta.json",
      "scripts": {
        "apply": "# Sparkle Debloat Script\n# This script provides options for different debloat methods\n# Made by Parcoil\n# Credits to Raphire for his debloat script: https://github.com/Raphire\n\nparam(\n    [string]$ScriptChoice = \"\",\n    [string[]]$AppsToKeep = @()\n)\n\n$version = \"1.0.0\"\n\nAdd-Type -AssemblyName PresentationFramework\nAdd-Type -AssemblyName PresentationCore\nAdd-Type -AssemblyName WindowsBase\n\n# list of apps to remove\n$appDefinitions = @(\n    @{ Package = \"Clipchamp.Clipchamp\"; FriendlyName = \"Clipchamp Video Editor\" },\n    @{ Package = \"Microsoft.3DBuilder\"; FriendlyName = \"3D Builder\" },\n    @{ Package = \"Microsoft.549981C3F5F10\"; FriendlyName = \"Cortana\" },\n    @{ Package = \"Microsoft.BingFinance\"; FriendlyName = \"Bing Finance\" },\n    @{ Package = \"Microsoft.BingFoodAndDrink\"; FriendlyName = \"Bing Food & Drink\" },\n    @{ Package = \"Microsoft.BingHealthAndFitness\"; FriendlyName = \"Bing Health & Fitness\" },\n    @{ Package = \"Microsoft.BingNews\"; FriendlyName = \"Bing News\" },\n    @{ Package = \"Microsoft.BingSports\"; FriendlyName = \"Bing Sports\" },\n    @{ Package = \"Microsoft.BingTranslator\"; FriendlyName = \"Bing Translator\" },\n    @{ Package = \"Microsoft.BingTravel\"; FriendlyName = \"Bing Travel\" },\n    @{ Package = \"Microsoft.BingWeather\"; FriendlyName = \"Bing Weather\" },\n    @{ Package = \"Microsoft.Copilot\"; FriendlyName = \"Microsoft Copilot\" },\n    @{ Package = \"Microsoft.Getstarted\"; FriendlyName = \"Get Started (Tips)\" },\n    @{ Package = \"Microsoft.Messaging\"; FriendlyName = \"Microsoft Messaging\" },\n    @{ Package = \"Microsoft.Microsoft3DViewer\"; FriendlyName = \"3D Viewer\" },\n    @{ Package = \"Microsoft.MicrosoftJournal\"; FriendlyName = \"Microsoft Journal\" },\n    @{ Package = \"Microsoft.MicrosoftOfficeHub\"; FriendlyName = \"Office Hub\" },\n    @{ Package = \"Microsoft.MicrosoftPowerBIForWindows\"; FriendlyName = \"Power BI\" },\n    @{ Package = \"Microsoft.MicrosoftSolitaireCollection\"; FriendlyName = \"Solitaire Collection\" },\n    @{ Package = \"Microsoft.MicrosoftStickyNotes\"; FriendlyName = \"Sticky Notes\" },\n    @{ Package = \"Microsoft.MixedReality.Portal\"; FriendlyName = \"Mixed Reality Portal\" },\n    @{ Package = \"Microsoft.News\"; FriendlyName = \"Microsoft News\" },\n    @{ Package = \"Microsoft.Office.OneNote\"; FriendlyName = \"OneNote\" },\n    @{ Package = \"Microsoft.Office.Sway\"; FriendlyName = \"Office Sway\" },\n    @{ Package = \"Microsoft.OneConnect\"; FriendlyName = \"OneConnect\" },\n    @{ Package = \"Microsoft.Paint\"; FriendlyName = \"Paint\" },\n    @{ Package = \"Microsoft.Print3D\"; FriendlyName = \"Print 3D\" },\n    @{ Package = \"Microsoft.SkypeApp\"; FriendlyName = \"Skype\" },\n    @{ Package = \"Microsoft.Todos\"; FriendlyName = \"Microsoft To Do\" },\n    @{ Package = \"Microsoft.WindowsAlarms\"; FriendlyName = \"Alarms & Clock\" },\n    @{ Package = \"Microsoft.WindowsCamera\"; FriendlyName = \"Camera\" },\n    @{ Package = \"Microsoft.WindowsFeedbackHub\"; FriendlyName = \"Feedback Hub\" },\n    @{ Package = \"Microsoft.WindowsMaps\"; FriendlyName = \"Maps\" },\n    @{ Package = \"Microsoft.WindowsNotepad\"; FriendlyName = \"Notepad\" },\n    @{ Package = \"Microsoft.WindowsSoundRecorder\"; FriendlyName = \"Sound Recorder\" },\n    @{ Package = \"Microsoft.XboxApp\"; FriendlyName = \"Xbox Console Companion\" },\n    @{ Package = \"Microsoft.ZuneVideo\"; FriendlyName = \"Movies & TV\" },\n    @{ Package = \"MicrosoftCorporationII.MicrosoftFamily\"; FriendlyName = \"Microsoft Family\" },\n    @{ Package = \"MicrosoftTeams\"; FriendlyName = \"Microsoft Teams\" },\n    @{ Package = \"MSTeams\"; FriendlyName = \"Teams\" },\n    @{ Package = \"Microsoft.WindowsCalculator\"; FriendlyName = \"Calculator\" },\n    @{ Package = \"Microsoft.Windows.Photos\"; FriendlyName = \"Photos\" },\n    @{ Package = \"microsoft.windowscommunicationsapps\"; FriendlyName = \"Mail & Calendar\" },\n    @{ Package = \"Microsoft.XboxGamingOverlay\"; FriendlyName = \"Xbox Game Bar\" },\n    @{ Package = \"Microsoft.XboxIdentityProvider\"; FriendlyName = \"Xbox Identity Provider\" },\n    @{ Package = \"Microsoft.XboxSpeechToTextOverlay\"; FriendlyName = \"Xbox Speech to Text\" },\n    @{ Package = \"Microsoft.OneDrive\"; FriendlyName = \"OneDrive\" },\n    @{ Package = \"Amazon.com.Amazon\"; FriendlyName = \"Amazon\" },\n    @{ Package = \"9P1J8S7CCWWT\"; FriendlyName = \"Clipchamp (Store)\" },\n    @{ Package = \"AmazonVideo.PrimeVideo\"; FriendlyName = \"Prime Video\" },\n    @{ Package = \"Disney\"; FriendlyName = \"Disney+\" },\n    @{ Package = \"Duolingo-LearnLanguagesforFree\"; FriendlyName = \"Duolingo\" },\n    @{ Package = \"Facebook\"; FriendlyName = \"Facebook\" },\n    @{ Package = \"FarmVille2CountryEscape\"; FriendlyName = \"FarmVille 2\" },\n    @{ Package = \"Instagram\"; FriendlyName = \"Instagram\" },\n    @{ Package = \"Netflix\"; FriendlyName = \"Netflix\" },\n    @{ Package = \"PandoraMediaInc.Pandora\"; FriendlyName = \"Pandora\" },\n    @{ Package = \"Spotify\"; FriendlyName = \"Spotify\" },\n    @{ Package = \"Twitter\"; FriendlyName = \"Twitter\" },\n    @{ Package = \"TwitterUniversal\"; FriendlyName = \"Twitter (Universal)\" },\n    @{ Package = \"YouTube\"; FriendlyName = \"YouTube\" },\n    @{ Package = \"Plex\"; FriendlyName = \"Plex\" },\n    @{ Package = \"TikTok\"; FriendlyName = \"TikTok\" },\n    @{ Package = \"TuneInRadio\"; FriendlyName = \"TuneIn Radio\" },\n    @{ Package = \"king.com.BubbleWitch3Saga\"; FriendlyName = \"Bubble Witch 3 Saga\" },\n    @{ Package = \"king.com.CandyCrushSaga\"; FriendlyName = \"Candy Crush Saga\" },\n    @{ Package = \"king.com.CandyCrushSodaSaga\"; FriendlyName = \"Candy Crush Soda Saga\" }\n)\n\n$allAppsToRemove = $appDefinitions | ForEach-Object { $_.Package }\n\n# default apps to pre-check (these will be kept)\n$defaultApps = @(\n    \"Microsoft.WindowsCalculator\", \n    \"Microsoft.WindowsNotepad\",\n    \"Microsoft.Paint\",\n    \"Microsoft.Windows.Photos\",\n    \"Microsoft.WindowsCamera\",\n    \"Microsoft.XboxGamingOverlay\",\n    \"Microsoft.XboxIdentityProvider\",\n    \"Microsoft.XboxSpeechToTextOverlay\",\n    \"Microsoft.XboxApp\"\n)\n\nfunction Get-FriendlyName {\n    param([string]$PackageName)\n    \n    $def = $appDefinitions | Where-Object { $_.Package -eq $PackageName }\n    if ($def) {\n        return $def.FriendlyName\n    }\n    \n    # fallback to auto-generated name\n    return $PackageName -replace \"MicrosoftCorporationII\\.\", \"\" -replace \"Microsoft\\.\", \"\" -replace \"\\.\", \" \"\n}\n\nfunction Show-ScriptSelectionDialog {\n    [xml]$xaml = @\"\n<Window xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        Title=\"(Sparkle) Debloat Script v$version\" \n        Height=\"220\" Width=\"550\" \n        WindowStartupLocation=\"CenterScreen\"\n        Topmost=\"True\"\n        ResizeMode=\"NoResize\">\n    <Grid Margin=\"15\">\n        <Grid.RowDefinitions>\n            <RowDefinition Height=\"Auto\"/>\n            <RowDefinition Height=\"*\"/>\n            <RowDefinition Height=\"Auto\"/>\n        </Grid.RowDefinitions>\n        \n        <TextBlock Grid.Row=\"0\" Text=\"Choose your debloat approach:\" \n                   FontSize=\"14\" FontWeight=\"Bold\" Margin=\"0,0,0,15\"/>\n        \n        <StackPanel Grid.Row=\"1\" Margin=\"10,0,0,0\">\n            <RadioButton x:Name=\"RadioSparkle\" Content=\"Sparkle Debloat Script (You can choose which apps to keep) (Recommended)\" \n                        Margin=\"0,0,0,10\" IsChecked=\"True\" FontSize=\"12\"/>\n            <RadioButton x:Name=\"RadioRaphire\" Content=\"Raphire's Win11Debloat Script (Comprehensive, read docs for details)\" \n                        FontSize=\"12\"/>\n        </StackPanel>\n        \n        <StackPanel Grid.Row=\"2\" Orientation=\"Horizontal\" HorizontalAlignment=\"Right\" Margin=\"0,15,0,0\">\n            <Button x:Name=\"BtnOK\" Content=\"OK\" Width=\"80\" Height=\"28\" Margin=\"0,0,10,0\" IsDefault=\"True\"/>\n            <Button x:Name=\"BtnCancel\" Content=\"Cancel\" Width=\"80\" Height=\"28\" IsCancel=\"True\"/>\n        </StackPanel>\n    </Grid>\n</Window>\n\"@\n\n    $reader = New-Object System.Xml.XmlNodeReader $xaml\n    $window = [Windows.Markup.XamlReader]::Load($reader)\n    \n    $radioSparkle = $window.FindName(\"RadioSparkle\")\n    $radioRaphire = $window.FindName(\"RadioRaphire\")\n    $btnOK = $window.FindName(\"BtnOK\")\n    $btnCancel = $window.FindName(\"BtnCancel\")\n    \n    $script:dialogResult = $null\n    \n    $btnOK.Add_Click({\n            if ($radioRaphire.IsChecked) {\n                $script:dialogResult = \"raphire\"\n            }\n            else {\n                $script:dialogResult = \"custom\"\n            }\n            $window.Close()\n        })\n    \n    $btnCancel.Add_Click({\n            $script:dialogResult = \"cancel\"\n            $window.Close()\n        })\n    \n    $window.ShowDialog() | Out-Null\n    return $script:dialogResult\n}\n\nfunction Show-AppSelectionDialog {\n    # generate apps list with friendly names\n    $apps = @()\n    foreach ($appDef in $appDefinitions) {\n        $apps += @{ \n            Name      = $appDef.FriendlyName\n            Package   = $appDef.Package\n            IsChecked = ($defaultApps -contains $appDef.Package) \n        }\n    }\n    \n    # sort by friendly name for better UX\n    $apps = $apps | Sort-Object { $_.Name }\n    \n    [xml]$xaml = @\"\n<Window xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n    Title=\"(Sparkle) Select Apps to Keep v$version\" \n    Height=\"650\" Width=\"550\" \n    WindowStartupLocation=\"CenterScreen\"\n    ResizeMode=\"NoResize\">\n    <Grid Margin=\"15\">\n    <Grid.RowDefinitions>\n        <RowDefinition Height=\"Auto\"/>   <!-- Title -->\n        <RowDefinition Height=\"Auto\"/>   <!-- Warning -->\n        <RowDefinition Height=\"*\"/>      <!-- List -->\n        <RowDefinition Height=\"Auto\"/>   <!-- Select/Deselect -->\n        <RowDefinition Height=\"Auto\"/>   <!-- OK/Cancel -->\n    </Grid.RowDefinitions>\n    \n    <TextBlock Grid.Row=\"0\" Text=\"Select the apps you want to KEEP (uncheck to remove):\" \n           FontSize=\"14\" FontWeight=\"Bold\" Margin=\"0,0,0,10\" TextWrapping=\"Wrap\"/>\n    <TextBlock Grid.Row=\"1\" Text=\"Ensure you have a restore point before proceeding.\" \n           FontSize=\"12\"  Margin=\"0,0,0,10\"/>\n\n    <Border Grid.Row=\"2\" BorderBrush=\"#CCCCCC\" BorderThickness=\"1\" Margin=\"0,0,0,10\">\n        <ScrollViewer VerticalScrollBarVisibility=\"Auto\" >\n        <ItemsControl x:Name=\"AppsList\" Margin=\"5\">\n            <ItemsControl.ItemTemplate>\n            <DataTemplate>\n                <CheckBox Content=\"{Binding Name}\" IsChecked=\"{Binding IsChecked}\" \n                     Margin=\"5,3\" FontSize=\"11\"/>\n            </DataTemplate>\n            </ItemsControl.ItemTemplate>\n        </ItemsControl>\n        </ScrollViewer>\n    </Border>\n    \n    <StackPanel Grid.Row=\"3\" Orientation=\"Horizontal\" Margin=\"0,0,0,10\">\n        <Button x:Name=\"BtnSelectAll\" Content=\"Select All\" Width=\"100\" Height=\"28\" Margin=\"0,0,10,0\"/>\n        <Button x:Name=\"BtnDeselectAll\" Content=\"Deselect All\" Width=\"100\" Height=\"28\"/>\n    </StackPanel>\n    \n    <StackPanel Grid.Row=\"4\" Orientation=\"Horizontal\" HorizontalAlignment=\"Right\">\n        <Button x:Name=\"BtnOK\" Content=\"OK\" Width=\"80\" Height=\"28\" Margin=\"0,0,10,0\" IsDefault=\"True\"/>\n        <Button x:Name=\"BtnCancel\" Content=\"Cancel\" Width=\"80\" Height=\"28\" IsCancel=\"True\"/>\n    </StackPanel>\n    </Grid>\n</Window>\n\"@\n\n    $reader = New-Object System.Xml.XmlNodeReader $xaml\n    $window = [Windows.Markup.XamlReader]::Load($reader)\n    \n    $appsList = $window.FindName(\"AppsList\")\n    $btnSelectAll = $window.FindName(\"BtnSelectAll\")\n    $btnDeselectAll = $window.FindName(\"BtnDeselectAll\")\n    $btnOK = $window.FindName(\"BtnOK\")\n    $btnCancel = $window.FindName(\"BtnCancel\")\n    \n    # create observable collection for data binding\n    $observableApps = New-Object System.Collections.ObjectModel.ObservableCollection[Object]\n    foreach ($app in $apps) {\n        $observableApps.Add((New-Object PSObject -Property $app))\n    }\n    $appsList.ItemsSource = $observableApps\n    \n    $script:dialogResult = $null\n    \n    $btnSelectAll.Add_Click({\n            foreach ($item in $observableApps) {\n                $item.IsChecked = $true\n            }\n            $appsList.Items.Refresh()\n        })\n    \n    $btnDeselectAll.Add_Click({\n            foreach ($item in $observableApps) {\n                $item.IsChecked = $false\n            }\n            $appsList.Items.Refresh()\n        })\n    \n    $btnOK.Add_Click({\n            $script:dialogResult = @()\n            foreach ($item in $observableApps) {\n                if ($item.IsChecked) {\n                    $script:dialogResult += $item.Package\n                }\n            }\n            $window.Close()\n        })\n    \n    $btnCancel.Add_Click({\n            $script:dialogResult = $null\n            $window.Close()\n            \n        })\n    \n    $window.ShowDialog() | Out-Null\n    return $script:dialogResult\n}\n\nfunction Remove-SelectedApps {\n    param([string[]]$AppsToKeep)\n\n    Write-Host \"Starting Sparkle debloat...\" -ForegroundColor Green\n\n    $appsToRemove = $allAppsToRemove | Where-Object { $_ -notin $AppsToKeep }\n\n    # display friendly names in console output\n    $keptNames = $AppsToKeep | ForEach-Object { Get-FriendlyName $_ }\n    Write-Host \"Apps that will be kept: $($keptNames -join ', ')\" -ForegroundColor Yellow\n    Write-Host \"Apps that will be removed: $($appsToRemove.Count)\" -ForegroundColor Red\n    \n    foreach ($app in $appsToRemove) {\n        try {\n            $friendlyName = Get-FriendlyName $app\n            Write-Host \"Checking for $friendlyName ($app)...\" -ForegroundColor Yellow\n\n            $pkg = Get-AppxPackage -Name *$app* -ErrorAction SilentlyContinue\n            if ($pkg) {\n                $pkg | ForEach-Object {\n                    Write-Host \"Removing Appx package $($_.Name)...\" -ForegroundColor Yellow\n                    Remove-AppxPackage -Package $_.PackageFullName -ErrorAction SilentlyContinue\n                }\n                Write-Host \"Removed $friendlyName\" -ForegroundColor Green\n            }\n            else {\n                Write-Host \"$friendlyName is not installed\" -ForegroundColor Gray\n            }\n\n            $prov = Get-AppxProvisionedPackage -Online | Where-Object DisplayName -like \"*$app*\"\n            if ($prov) {\n                $prov | ForEach-Object {\n                    Write-Host \"Removing provisioned package $($_.DisplayName)...\" -ForegroundColor Yellow\n                    Remove-AppxProvisionedPackage -Online -PackageName $_.PackageName -ErrorAction SilentlyContinue\n                }\n            }\n        }\n        catch {\n            Write-Host \"Could not remove $friendlyName : $_\" -ForegroundColor Red\n        }\n    }\n\n    Write-Host \"Sparkle debloat completed!\" -ForegroundColor Green\n}\n\ntry {\n    Write-Host \"Starting Sparkle Debloat script...\" -ForegroundColor Green\n    Write-Host \"Script Choice: '$ScriptChoice'\" -ForegroundColor Yellow\n    Write-Host \"Apps to Keep Count: $($AppsToKeep.Count)\" -ForegroundColor Yellow\n    \n    # get the ui params \n    if ($ScriptChoice -eq \"raphire\") {\n        Write-Host \"Running Raphire's Win11Debloat script...\" -ForegroundColor Green\n        & ([scriptblock]::Create((Invoke-RestMethod 'https://debloat.raphi.re/'))) -Silent -RemoveApps\n        Write-Host \"Raphire's script completed!\" -ForegroundColor Green\n    }\n    elseif ($ScriptChoice -eq \"custom\") {\n        if ($AppsToKeep.Count -gt 0) {\n            Write-Host \"Running Sparkle debloat with $($AppsToKeep.Count) apps to keep...\" -ForegroundColor Green\n            Remove-SelectedApps -AppsToKeep $AppsToKeep\n        }\n        else {\n            Write-Host \"Custom debloat selected but no apps specified. Running with defaults...\" -ForegroundColor Yellow\n            Remove-SelectedApps -AppsToKeep $defaultApps\n        }\n    }\n    elseif ($ScriptChoice -eq \"\" -or $ScriptChoice -eq $null) {\n        Write-Host \"No script choice provided, entering interactive mode...\" -ForegroundColor Yellow\n        \n        try {\n            $choice = Show-ScriptSelectionDialog\n            \n            if ($choice -eq \"cancel\") {\n                Write-Host \"Operation cancelled by user.\" -ForegroundColor Yellow\n                exit 0\n            }\n            \n            if ($choice -eq \"raphire\") {\n                Write-Host \"Running Raphire's Win11Debloat script...\" -ForegroundColor Green\n                & ([scriptblock]::Create((Invoke-RestMethod 'https://debloat.raphi.re/'))) -Silent -RemoveApps\n                Write-Host \"Debloat completed!\" -ForegroundColor Green\n            }\n            elseif ($choice -eq \"custom\") {\n                $appsToKeep = Show-AppSelectionDialog\n                \n                if ($appsToKeep -eq $null) {\n                    Write-Host \"Operation cancelled by user.\" -ForegroundColor Yellow\n                    exit 0\n                }\n                \n                Remove-SelectedApps -AppsToKeep $appsToKeep\n            }\n        }\n        catch {\n            Write-Host \"Interactive mode failed, falling back to Raphire's script: $_\" -ForegroundColor Yellow\n            & ([scriptblock]::Create((Invoke-RestMethod 'https://debloat.raphi.re/'))) -Silent -RemoveApps\n        }\n    }\n    else {\n        Write-Host \"Unknown script choice '$ScriptChoice', defaulting to Raphire's script...\" -ForegroundColor Yellow\n        & ([scriptblock]::Create((Invoke-RestMethod 'https://debloat.raphi.re/'))) -Silent -RemoveApps\n    }\n    Write-Host \"Debloat Script From https://getsparkle.net\" -ForegroundColor Cyan\n\n    if (-not (Get-Process -Name \"Sparkle\" -ErrorAction SilentlyContinue)) {\n        Add-Type -AssemblyName PresentationFramework\n        \n        [xml]$xaml = @\"\n<Window \n    xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n    Title=\"Sparkle - Debloat Complete\" \n    Height=\"150\" \n    Width=\"400\"\n    WindowStartupLocation=\"CenterScreen\">\n    <Grid>\n        <Grid.RowDefinitions>\n            <RowDefinition Height=\"*\"/>\n            <RowDefinition Height=\"Auto\"/>\n        </Grid.RowDefinitions>\n        \n        <TextBlock Grid.Row=\"0\" \n                  Text=\"Debloat completed successfully!\" \n                  FontSize=\"16\"\n                  TextWrapping=\"Wrap\"\n                  HorizontalAlignment=\"Center\"\n                  VerticalAlignment=\"Center\"\n                  TextAlignment=\"Center\"/>\n                  \n        <Button Grid.Row=\"1\" \n               x:Name=\"BtnOK\" \n               Content=\"OK\" \n               Width=\"80\" \n               Margin=\"15\"\n               HorizontalAlignment=\"Center\"/>\n    </Grid>\n</Window>\n\"@\n\n        $reader = New-Object System.Xml.XmlNodeReader $xaml\n        $window = [Windows.Markup.XamlReader]::Load($reader)\n        \n        $btnOK = $window.FindName(\"BtnOK\")\n        $btnOK.Add_Click({ $window.Close() })\n        \n        $window.ShowDialog() | Out-Null\n    }\n\n}\ncatch {\n    Write-Host \"Error during debloat process: $_\" -ForegroundColor Red\n    Write-Host \"Stack trace: $($_.ScriptStackTrace)\" -ForegroundColor Red\n    exit 1\n}",
        "unapply": null
      }
    },
    {
      "id": "detailed-bsod",
      "title": "Detailed BSOD",
      "description": "Adds detailed information to the Blue Screen of Death (BSOD) screen",
      "category": ["General"],
      "recommended": false,
      "reversible": true,
      "docsurl": "https://docs.getsparkle.net/tweaks/detailed-bsod",
      "source": "https://github.com/Parcoil/Sparkle/blob/v2/tweaks/detailed-bsod/meta.json",
      "scripts": {
        "apply": "Set-ItemProperty -Path \"HKLM:\\System\\CurrentControlSet\\Control\\CrashControl\" -Name \"Value\" -Type DWord -Value 1\n",
        "unapply": "Set-ItemProperty -Path \"HKLM:\\System\\CurrentControlSet\\Control\\CrashControl\" -Name \"Value\" -Type DWord -Value 0\n"
      }
    },
    {
      "id": "disable-background-ms-store-apps",
      "title": "Disable Background MS Store apps",
      "description": "Disables Microsoft Store apps from running in the background",
      "category": ["Performance", "Privacy"],
      "recommended": false,
      "reversible": true,
      "docsurl": "https://docs.getsparkle.net/tweaks/disable-background-ms-store-apps",
      "source": "https://github.com/Parcoil/Sparkle/blob/v2/tweaks/disable-background-ms-store-apps/meta.json",
      "scripts": {
        "apply": "$path = \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\BackgroundAccessApplications\"\n$name = \"GlobalUserDisabled\"\n$newValue = 1\n  \n# Ensure the key exists\nIf (-Not (Test-Path $path)) {\n  New-Item -Path $path -Force | Out-Null\n}\n  \n# Set the value\nSet-ItemProperty -Path $path -Name $name -Type DWord -Value $newValue\n  \nWrite-Host \"$name set to $newValue (Background Access Disabled)\"",
        "unapply": " $path = \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\BackgroundAccessApplications\"\n  $name = \"GlobalUserDisabled\"\n  $originalValue = 0\n  \n  # Ensure the key exists\n  If (-Not (Test-Path $path)) {\n      New-Item -Path $path -Force | Out-Null\n  }\n  \n  # Revert the value\n  Set-ItemProperty -Path $path -Name $name -Type DWord -Value $originalValue\n  \n  Write-Host \"$name reverted to $originalValue (Background Access Restored)\" -ForegroundColor Yellow"
      }
    },
    {
      "id": "disable-copilot",
      "title": "Disable Copilot",
      "description": "Removes Microsoft's Copilot feature. (will fail if copilot is not installed)",
      "category": ["Performance", "Privacy"],
      "recommended": true,
      "reversible": true,
      "docsurl": "https://docs.getsparkle.net/tweaks/disable-copilot",
      "source": "https://github.com/Parcoil/Sparkle/blob/v2/tweaks/disable-copilot/meta.json",
      "scripts": {
        "apply": "Get-AppxPackage -AllUsers | Where-Object {$_.Name -Like '*Microsoft.Copilot*'} | Remove-AppxPackage -ErrorAction Continue",
        "unapply": "winget install 9NHT9RB2F4HD --source msstore --accept-source-agreements --accept-package-agreements"
      }
    },
    {
      "id": "disable-core-isolation",
      "title": "Disable Core Isolation",
      "description": "Disables Core Isolation Memory Integrity to improve system performance",
      "category": ["Performance", "Gaming"],
      "recommended": false,
      "reversible": true,
      "docsurl": "https://docs.getsparkle.net/tweaks/disable-core-isolation",
      "source": "https://github.com/Parcoil/Sparkle/blob/v2/tweaks/disable-core-isolation/meta.json",
      "scripts": {
        "apply": "New-Item -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\DeviceGuard\\Scenarios\\HypervisorEnforcedCodeIntegrity\" -Force | Out-Null\n\nSet-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\DeviceGuard\\Scenarios\\HypervisorEnforcedCodeIntegrity\" `\n    -Name \"Enabled\" -Value 0 -Type DWord\n",
        "unapply": "New-Item -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\DeviceGuard\\Scenarios\\HypervisorEnforcedCodeIntegrity\" -Force | Out-Null\n\nSet-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\DeviceGuard\\Scenarios\\HypervisorEnforcedCodeIntegrity\" `\n    -Name \"Enabled\" -Value 1 -Type DWord\n"
      }
    },
    {
      "id": "disable-defender-rtp",
      "title": "Disable Defender RTP",
      "description": "Disables Defender Real-time Protection",
      "category": ["Performance", "General"],
      "recommended": false,
      "reversible": true,
      "docsurl": "https://docs.getsparkle.net/tweaks/disable-defender-rtp",
      "source": "https://github.com/Parcoil/Sparkle/blob/v2/tweaks/disable-defender-rtp/meta.json",
      "scripts": {
        "apply": "Set-MpPreference -DisableRealtimeMonitoring $true",
        "unapply": "Set-MpPreference -DisableRealtimeMonitoring $false"
      }
    },
    {
      "id": "disable-dynamic-ticking",
      "title": "Disable Dynamic Ticking",
      "description": "Improves system responsiveness and reduces latency by disabling dynamic timer ticks.",
      "category": ["Performance"],
      "recommended": false,
      "reversible": true,
      "docsurl": "https://docs.getsparkle.net/tweaks/disable-dynamic-ticking",
      "source": "https://github.com/Parcoil/Sparkle/blob/v2/tweaks/disable-dynamic-ticking/meta.json",
      "scripts": {
        "apply": "try {\n    bcdedit /set disabledynamictick yes\n    Write-Host \"Dynamic Ticking disabled successfully\"\n  } catch {\n    Write-Host \"Failed to apply Dynamic Ticking tweak\"\n  }",
        "unapply": "try {\n    bcdedit /set disabledynamictick no\n    Write-Host \"Dynamic Ticking settings restored\"\n  } catch {\n    Write-Host \"Failed to revert Dynamic Ticking tweak\"\n  }"
      }
    },
    {
      "id": "disable-fast-startup",
      "title": "Disable Fast Startup",
      "description": "Disables Windows Fast Startup to improve system stability",
      "category": ["Performance", "General"],
      "recommended": false,
      "reversible": true,
      "docsurl": "https://docs.getsparkle.net/tweaks/disable-fast-startup",
      "source": "https://github.com/Parcoil/Sparkle/blob/v2/tweaks/disable-fast-startup/meta.json",
      "scripts": {
        "apply": "Set-ItemProperty -Path 'HKLM:\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Session Manager\\\\Power' -Name HiberbootEnabled -Value 0",
        "unapply": "Set-ItemProperty -Path 'HKLM:\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Session Manager\\\\Power' -Name HiberbootEnabled -Value 1"
      }
    },
    {
      "id": "disable-gamebar",
      "title": "Disable Gamebar",
      "description": "Disables The Xbox gamebar ",
      "category": ["Performance"],
      "recommended": false,
      "reversible": true,
      "docsurl": "https://docs.getsparkle.net/tweaks/disable-gamebar",
      "source": "https://github.com/Parcoil/Sparkle/blob/v2/tweaks/disable-gamebar/meta.json",
      "scripts": {
        "apply": "try {\n    winget uninstall 9nzkpstsnw4p --silent --accept-source-agreements \n        Get-AppxPackage Microsoft.XboxGamingOverlay | Remove-AppxPackage -ErrorAction Stop\n      \n        Write-Output 'Successfully removed Xbox Gaming Overlay via AppxPackage'\n    }\n    catch {\n        Write-Output 'AppxPackage removal failed, trying to remove via winget'\n        try {\n            winget uninstall 9nzkpstsnw4p --silent --accept-source-agreements \n            Write-Output 'Successfully removed Xbox Gaming Overlay via winget'\n        }\n        catch {\n            Write-Output 'Winget uninstall failed'\n        }\n    }",
        "unapply": "winget install 9NZKPSTSNW4P --source msstore --accept-source-agreements --accept-package-agreements"
      }
    },
    {
      "id": "disable-hibernation",
      "title": "Disable Hibernation",
      "description": "Disables the hibernation feature to free up disk space and improve shutdown speed",
      "category": ["Performance", "General"],
      "recommended": false,
      "reversible": true,
      "docsurl": "https://docs.getsparkle.net/tweaks/disable-hibernation",
      "source": "https://github.com/Parcoil/Sparkle/blob/v2/tweaks/disable-hibernation/meta.json",
      "scripts": {
        "apply": "powercfg.exe /hibernate off",
        "unapply": "powercfg.exe /hibernate on"
      }
    },
    {
      "id": "disable-location-tracking",
      "title": "Disable Location Tracking",
      "description": "Disables Windows location tracking.",
      "category": ["Privacy"],
      "recommended": false,
      "reversible": true,
      "docsurl": "https://docs.getsparkle.net/tweaks/disable-location-tracking",
      "source": "https://github.com/Parcoil/Sparkle/blob/v2/tweaks/disable-location-tracking/meta.json",
      "scripts": {
        "apply": "  Set-ItemProperty -Path \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\DataCollection\" -Name \"Allow\" -Value \"Deny\" -Type String -Force\n  Set-ItemProperty -Path \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\CapabilityAccessManager\\ConsentStore\\location\" -Name \"SensorPermissionState\" -Value 0 -Type DWord -Force\n  Set-ItemProperty -Path \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Diagnostics\\DiagTrack\" -Name \"Status\" -Value 0 -Type DWord -Force\n  Set-ItemProperty -Path \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\WindowsUpdate\\Auto Update\" -Name \"AutoUpdateEnabled\" -Value 0 -Type DWord -Force",
        "unapply": "  Set-ItemProperty -Path \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\DataCollection\" -Name \"Allow\" -Value \"Allow\" -Type String -Force\n  Set-ItemProperty -Path \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\CapabilityAccessManager\\ConsentStore\\location\" -Name \"SensorPermissionState\" -Value 1 -Type DWord -Force\n  Set-ItemProperty -Path \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Diagnostics\\DiagTrack\" -Name \"Status\" -Value 1 -Type DWord -Force\n  Set-ItemProperty -Path \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\WindowsUpdate\\Auto Update\" -Name \"AutoUpdateEnabled\" -Value 1 -Type DWord -Force"
      }
    },
    {
      "id": "disable-lockscreen-tips",
      "title": "Disable Lockscreen Tips",
      "description": "Disables tips on the lockscreen.",
      "category": ["General"],
      "recommended": false,
      "reversible": true,
      "docsurl": "https://docs.getsparkle.net/tweaks/disable-lockscreen-tips",
      "source": "https://github.com/Parcoil/Sparkle/blob/v2/tweaks/disable-lockscreen-tips/meta.json",
      "scripts": {
        "apply": "# Disable fun facts, tips, and more on the lock screen\nSet-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\ContentDeliveryManager\" -Name \"RotatingLockScreenOverlayEnabled\" -Value 0 -Type DWord\nSet-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\ContentDeliveryManager\" -Name \"SubscribedContent-338387Enabled\" -Value 0 -Type DWord\n",
        "unapply": "# Enable fun facts, tips, and more on the lock screen\nSet-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\ContentDeliveryManager\" -Name \"RotatingLockScreenOverlayEnabled\" -Value 1 -Type DWord\nSet-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\ContentDeliveryManager\" -Name \"SubscribedContent-338387Enabled\" -Value 1 -Type DWord\n"
      }
    },
    {
      "id": "disable-mouse-acceleration",
      "title": "Disable Mouse Acceleration",
      "description": "Disables mouse acceleration for a more consistent and precise mouse movement experience. Great for gaming",
      "category": ["Performance", "Gaming"],
      "recommended": false,
      "reversible": true,
      "docsurl": "https://docs.getsparkle.net/tweaks/disable-mouse-acceleration",
      "source": "https://github.com/Parcoil/Sparkle/blob/v2/tweaks/disable-mouse-acceleration/meta.json",
      "scripts": {
        "apply": "Set-ItemProperty -Path \"HKCU:\\Control Panel\\Mouse\" -Name \"MouseSpeed\" -Value \"0\"\nSet-ItemProperty -Path \"HKCU:\\Control Panel\\Mouse\" -Name \"MouseThreshold1\" -Value \"0\"\nSet-ItemProperty -Path \"HKCU:\\Control Panel\\Mouse\" -Name \"MouseThreshold2\" -Value \"0\"\n",
        "unapply": "Set-ItemProperty -Path \"HKCU:\\Control Panel\\Mouse\" -Name \"MouseSpeed\" -Value \"1\"\nSet-ItemProperty -Path \"HKCU:\\Control Panel\\Mouse\" -Name \"MouseThreshold1\" -Value \"6\"\nSet-ItemProperty -Path \"HKCU:\\Control Panel\\Mouse\" -Name \"MouseThreshold2\" -Value \"10\"\n"
      }
    },
    {
      "id": "disable-wifi-sense",
      "title": "Disable Wifi Sense",
      "description": "Disables Wifi Sense to prevent sharing of Wi-Fi networks with contacts",
      "category": ["Privacy", "Network", "General"],
      "recommended": false,
      "reversible": true,
      "docsurl": "https://docs.getsparkle.net/tweaks/disable-wifi-sense",
      "source": "https://github.com/Parcoil/Sparkle/blob/v2/tweaks/disable-wifi-sense/meta.json",
      "scripts": {
        "apply": "  Set-ItemProperty -Path \"HKLM:\\Software\\Microsoft\\PolicyManager\\default\\WiFi\\AllowWiFiHotSpotReporting\" -Name \"Value\" -Type DWord -Value 0\n  Set-ItemProperty -Path \"HKLM:\\Software\\Microsoft\\PolicyManager\\default\\WiFi\\AllowAutoConnectToWiFiSenseHotspots\" -Name \"Value\" -Type DWord -Value 0",
        "unapply": "Set-ItemProperty -Path \"HKLM:\\Software\\Microsoft\\PolicyManager\\default\\WiFi\\AllowWiFiHotSpotReporting\" -Name \"Value\" -Type DWord -Value 1\nSet-ItemProperty -Path \"HKLM:\\Software\\Microsoft\\PolicyManager\\default\\WiFi\\AllowAutoConnectToWiFiSenseHotspots\" -Name \"Value\" -Type DWord -Value 1"
      }
    },
    {
      "id": "enable-dark-mode",
      "title": "Enable Dark Mode",
      "description": "Enables dark mode for Windows. Great for unactivated systems.",
      "category": ["General", "Appearance"],
      "recommended": false,
      "reversible": true,
      "docsurl": "https://docs.getsparkle.net/tweaks/enable-dark-mode",
      "source": "https://github.com/Parcoil/Sparkle/blob/v2/tweaks/enable-dark-mode/meta.json",
      "scripts": {
        "apply": "$Path = \"HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Themes\\Personalize\"\nSet-ItemProperty -Path $Path -Name AppsUseLightTheme -Value 0\nSet-ItemProperty -Path $Path -Name SystemUsesLightTheme -Value 0\nStop-Process -Name explorer -Force\nStart-Process explorer.exe\n",
        "unapply": "$Path = \"HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Themes\\Personalize\"\nSet-ItemProperty -Path $Path -Name AppsUseLightTheme -Value 1\nSet-ItemProperty -Path $Path -Name SystemUsesLightTheme -Value 1\nStop-Process -Name explorer -Force\nStart-Process explorer.exe\n"
      }
    },
    {
      "id": "enable-end-task-right-click",
      "title": "Enable End Task With Right Click",
      "description": "Enables the \"End Task\" option in the taskbar context menu",
      "category": ["General"],
      "recommended": true,
      "reversible": true,
      "docsurl": "https://docs.getsparkle.net/tweaks/enable-end-task-right-click",
      "source": "https://github.com/Parcoil/Sparkle/blob/v2/tweaks/enable-end-task-right-click/meta.json",
      "scripts": {
        "apply": "$regPath = \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\TaskbarDeveloperSettings\"\n$valueName = \"TaskbarEndTask\"\n\nif (-not (Test-Path $regPath)) {\n    New-Item -Path $regPath -Force | Out-Null\n}\n\nSet-ItemProperty -Path $regPath -Name $valueName -Type DWord -Value 1",
        "unapply": "$regPath = \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\TaskbarDeveloperSettings\"\n$valueName = \"TaskbarEndTask\"\n\nif (-not (Test-Path $regPath)) {\n    New-Item -Path $regPath -Force | Out-Null\n}\n\nSet-ItemProperty -Path $regPath -Name $valueName -Type DWord -Value 0"
      }
    },
    {
      "id": "enable-game-mode",
      "title": "Enable Game Mode",
      "description": "Enables Game Mode on windows",
      "category": ["General", "Performance", "Gaming"],
      "recommended": false,
      "reversible": true,
      "docsurl": "https://docs.getsparkle.net/tweaks/enable-game-mode",
      "source": "https://github.com/Parcoil/Sparkle/blob/v2/tweaks/enable-game-mode/meta.json",
      "scripts": {
        "apply": "Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\GameBar\" -Name \"AllowAutoGameMode\" -Value 1\nSet-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\GameBar\" -Name \"AutoGameModeEnabled\" -Value 1\n\nWrite-Output \"Game Mode is now ENABLED.\"\n",
        "unapply": "Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\GameBar\" -Name \"AllowAutoGameMode\" -Value 0\nSet-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\GameBar\" -Name \"AutoGameModeEnabled\" -Value 0\n\nWrite-Output \"Game Mode is now DISABLED.\"\n"
      }
    },
    {
      "id": "enable-hags",
      "title": "Enable HAGS",
      "description": "Enables HAGS (Hardware Accelerated GPU Scheduling)",
      "category": ["Performance", "Gaming", "GPU"],
      "recommended": false,
      "reversible": true,
      "docsurl": "https://docs.getsparkle.net/tweaks/enable-hags",
      "source": "https://github.com/Parcoil/Sparkle/blob/v2/tweaks/enable-hags/meta.json",
      "scripts": {
        "apply": "$regPath = \"HKLM:\\System\\CurrentControlSet\\Control\\GraphicsDrivers\"\n$keyName = \"HwSchMode\"\n$value = 2\n\nIf (-not (Test-Path $regPath)) {\n    New-Item -Path $regPath -Force | Out-Null\n}\n\nSet-ItemProperty -Path $regPath -Name $keyName -Value $value -Type DWord\n\nWrite-Host \"Hardware-Accelerated GPU Scheduling enabled. A restart may be required.\"\n",
        "unapply": "$regPath = \"HKLM:\\System\\CurrentControlSet\\Control\\GraphicsDrivers\"\n$keyName = \"HwSchMode\"\n$value = 1\n\nIf (Test-Path $regPath) {\n    Set-ItemProperty -Path $regPath -Name $keyName -Value $value -Type DWord\n    Write-Host \"Hardware-Accelerated GPU Scheduling disabled. A restart may be required.\"\n}\nelse {\n    Write-Host \"Registry path not found.\"\n}\n"
      }
    },
    {
      "id": "enable-hpet",
      "title": "Enable HPET (High Precision Event Timer)",
      "description": "Forces use of the High Precision Event Timer, which can reduce stuttering and improve timing accuracy on some hardware.",
      "category": ["Performance"],
      "recommended": false,
      "reversible": true,
      "docsurl": "https://docs.getsparkle.net/tweaks/enable-hpet",
      "source": "https://github.com/Parcoil/Sparkle/blob/v2/tweaks/enable-hpet/meta.json",
      "scripts": {
        "apply": "try {\n    bcdedit /set useplatformclock true\n    Write-Host \"HPET enabled successfully\"\n  } catch {\n    Write-Host \"Failed to enable HPET\"\n  }",
        "unapply": "try {\n    bcdedit /deletevalue useplatformclock\n    Write-Host \"HPET setting removed\"\n  } catch {\n    Write-Host \"Failed to disable HPET\"\n  }"
      }
    },
    {
      "id": "enable-optimization-for-windowed-games",
      "title": "Enable Optimization For Windowed Games",
      "description": "Enables Optimization For Windowed Games on windows",
      "category": ["General", "Performance", "Gaming"],
      "recommended": false,
      "reversible": true,
      "docsurl": "https://docs.getsparkle.net/tweaks/enable-optimization-for-windowed-games",
      "source": "https://github.com/Parcoil/Sparkle/blob/v2/tweaks/enable-optimization-for-windowed-games/meta.json",
      "scripts": {
        "apply": "\n$regPath = \"HKCU:\\Software\\Microsoft\\DirectX\\UserGpuPreferences\"\n$keyName = \"DirectXUserGlobalSettings\"\n$value = \"SwapEffectUpgradeEnable=1;\"\n\nIf (-not (Test-Path $regPath)) {\n    New-Item -Path $regPath -Force | Out-Null\n}\n\nSet-ItemProperty -Path $regPath -Name $keyName -Value $value\n\nWrite-Host \"DirectX game optimization applied.\"\n",
        "unapply": "$regPath = \"HKCU:\\Software\\Microsoft\\DirectX\\UserGpuPreferences\"\n$keyName = \"DirectXUserGlobalSettings\"\n\nIf (Test-Path \"$regPath\\$keyName\") {\n    Remove-ItemProperty -Path $regPath -Name $keyName -ErrorAction SilentlyContinue\n    Write-Host \"DirectX game optimization removed.\"\n}\nelse {\n    Write-Host \"Registry key does not exist, nothing to remove.\"\n}\n"
      }
    },
    {
      "id": "menu-show-delay-zero",
      "title": "Menu Show Delay Zero",
      "description": "Removes the delay when opening menus.",
      "category": ["Performance", "Appearance"],
      "recommended": false,
      "reversible": true,
      "docsurl": "https://docs.getsparkle.net/tweaks/menu-show-delay-zero",
      "source": "https://github.com/Parcoil/Sparkle/blob/v2/tweaks/menu-show-delay-zero/meta.json",
      "scripts": {
        "apply": "Set-ItemProperty -Path \"HKCU:\\Control Panel\\Desktop\" -Name \"MenuShowDelay\" -Type String -Value \"0\"\n",
        "unapply": "Set-ItemProperty -Path \"HKCU:\\Control Panel\\Desktop\" -Name \"MenuShowDelay\" -Type String -Value \"400\"\n"
      }
    },
    {
      "id": "optimize-network-settings",
      "title": "Optimize Network Settings",
      "description": "Changes various Windows settings to improve network latency and speeds.",
      "category": ["Network", "Gaming"],
      "recommended": false,
      "reversible": true,
      "updatedversion": "2.9.0",
      "docsurl": "https://docs.getsparkle.net/tweaks/optimize-network-settings",
      "source": "https://github.com/Parcoil/Sparkle/blob/v2/tweaks/optimize-network-settings/meta.json",
      "scripts": {
        "apply": "Write-Host \"Applying network tweaks...\"\n\nnetsh int tcp set heuristics disabled\nnetsh int tcp set supplemental template=internet congestionprovider=ctcp\nnetsh int tcp set global rss=enabled\nnetsh int tcp set global ecncapability=enabled\nnetsh int tcp set global timestamps=disabled\nnetsh int tcp set global fastopen=enabled\nnetsh int tcp set global fastopenfallback=enabled\nnetsh int tcp set supplemental template=custom icw=10\nnetsh interface ipv4 set subinterface \"Wi-Fi\" mtu=1500 store=persistent\nnetsh interface ipv4 set subinterface Ethernet mtu=1500 store=persistent\n\nWrite-Host \"Network tweaks applied successfully.\"\n",
        "unapply": "Write-Host \"Reverting network tweaks to defaults...\"\n\nnetsh int tcp set heuristics enabled\nnetsh int tcp set supplemental template=internet congestionprovider=default\nnetsh int tcp set global rss=default\nnetsh int tcp set global ecncapability=default\nnetsh int tcp set global timestamps=default\nnetsh int tcp set global fastopen=default\nnetsh int tcp set global fastopenfallback=default\nnetsh int tcp set supplemental template=custom icw=4\nnetsh interface ipv4 set subinterface \"Wi-Fi\" mtu=1500 store=persistent\nnetsh interface ipv4 set subinterface Ethernet mtu=1500 store=persistent\n\nWrite-Host \"Network tweaks reverted to defaults.\"\n"
      }
    },
    {
      "id": "optimize-nvidia-settings",
      "title": "Optimize Nvidia Settings",
      "description": "Changes Nvidia Control Panel settings to improve gaming performance",
      "category": ["Performance", "GPU", "Gaming"],
      "recommended": false,
      "reversible": false,
      "docsurl": "https://docs.getsparkle.net/tweaks/optimize-nvidia-settings",
      "source": "https://github.com/Parcoil/Sparkle/blob/v2/tweaks/optimize-nvidia-settings/meta.json",
      "scripts": {
        "apply": null,
        "unapply": null
      }
    },
    {
      "id": "remove-gaming-apps",
      "title": "Remove Gaming Apps",
      "description": "Removes Xbox app, Xbox Game Bar, and Xbox Game Overlay",
      "category": ["Performance", "Privacy"],
      "recommended": false,
      "reversible": false,
      "docsurl": "https://docs.getsparkle.net/tweaks/remove-gaming-apps",
      "source": "https://github.com/Parcoil/Sparkle/blob/v2/tweaks/remove-gaming-apps/meta.json",
      "scripts": {
        "apply": "$appsList = 'Microsoft.GamingApp', 'Microsoft.XboxGameOverlay', 'Microsoft.XboxGamingOverlay'\n\nforeach ($app in $appsList) {\n    Get-AppxPackage -Name $app -AllUsers | Remove-AppxPackage\n    Get-AppxProvisionedPackage -Online | Where-Object DisplayName -EQ $app | Remove-AppxProvisionedPackage -Online\n}\n",
        "unapply": null
      }
    },
    {
      "id": "remove-onedrive",
      "title": "Remove OneDrive",
      "description": "Removes OneDrive from the system",
      "category": ["Performance", "General", "Privacy"],
      "recommended": false,
      "reversible": true,
      "docsurl": "https://docs.getsparkle.net/tweaks/remove-onedrive",
      "source": "https://github.com/Parcoil/Sparkle/blob/v2/tweaks/remove-onedrive/meta.json",
      "scripts": {
        "apply": "$OneDrivePath = $($env:OneDrive)\n        Write-Host \"Removing OneDrive\"\n        $regPath = \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\OneDriveSetup.exe\"\n        if (Test-Path $regPath) {\n            $OneDriveUninstallString = Get-ItemPropertyValue \"$regPath\" -Name \"UninstallString\"\n            $OneDriveExe, $OneDriveArgs = $OneDriveUninstallString.Split(\" \")\n            Start-Process -FilePath $OneDriveExe -ArgumentList \"$OneDriveArgs /silent\" -NoNewWindow -Wait\n        } else {\n            Write-Host \"Onedrive dosn't seem to be installed anymore\" -ForegroundColor Red\n            return\n        }\n        # Check if OneDrive got Uninstalled\n        if (-not (Test-Path $regPath)) {\n        Write-Host \"Copy downloaded Files from the OneDrive Folder to Root UserProfile\"\n        Start-Process -FilePath powershell -ArgumentList \"robocopy '$($OneDrivePath)' '$($env:USERPROFILE.TrimEnd())\\' /mov /e /xj\" -NoNewWindow -Wait\n  \n        Write-Host \"Removing OneDrive leftovers\"\n        Remove-Item -Recurse -Force -ErrorAction SilentlyContinue \"$env:localappdata\\Microsoft\\OneDrive\"\n        Remove-Item -Recurse -Force -ErrorAction SilentlyContinue \"$env:localappdata\\OneDrive\"\n        Remove-Item -Recurse -Force -ErrorAction SilentlyContinue \"$env:programdata\\Microsoft OneDrive\"\n        Remove-Item -Recurse -Force -ErrorAction SilentlyContinue \"$env:systemdrive\\OneDriveTemp\"\n        reg delete \"HKEY_CURRENT_USER\\Software\\Microsoft\\OneDrive\" -f\n        # check if directory is empty before removing:\n        If ((Get-ChildItem \"$OneDrivePath\" -Recurse | Measure-Object).Count -eq 0) {\n            Remove-Item -Recurse -Force -ErrorAction SilentlyContinue \"$OneDrivePath\"\n        }\n  \n        Write-Host \"Remove Onedrive from explorer sidebar\"\n        Set-ItemProperty -Path \"HKCR:\\CLSID\\{018D5C66-4533-4307-9B53-224DE2ED1FE6}\" -Name \"System.IsPinnedToNameSpaceTree\" -Value 0\n        Set-ItemProperty -Path \"HKCR:\\Wow6432Node\\CLSID\\{018D5C66-4533-4307-9B53-224DE2ED1FE6}\" -Name \"System.IsPinnedToNameSpaceTree\" -Value 0\n  \n        Write-Host \"Removing run hook for new users\"\n        reg load \"hku\\Default\" \"C:\\Users\\Default\\NTUSER.DAT\"\n        reg delete \"HKEY_USERS\\Default\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\" /v \"OneDriveSetup\" /f\n        reg unload \"hku\\Default\"\n  \n        Write-Host \"Removing startmenu entry\"\n        Remove-Item -Force -ErrorAction SilentlyContinue \"$env:userprofile\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\OneDrive.lnk\"\n  \n        Write-Host \"Removing scheduled task\"\n        Get-ScheduledTask -TaskPath '\\' -TaskName 'OneDrive*' -ea SilentlyContinue | Unregister-ScheduledTask -Confirm:$false\n  \n        # Add Shell folders restoring default locations\n        Write-Host \"Shell Fixing\"\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"AppData\" -Value \"$env:userprofile\\AppData\\Roaming\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"Cache\" -Value \"$env:userprofile\\AppData\\Local\\Microsoft\\Windows\\INetCache\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"Cookies\" -Value \"$env:userprofile\\AppData\\Local\\Microsoft\\Windows\\INetCookies\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"Favorites\" -Value \"$env:userprofile\\Favorites\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"History\" -Value \"$env:userprofile\\AppData\\Local\\Microsoft\\Windows\\History\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"Local AppData\" -Value \"$env:userprofile\\AppData\\Local\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"My Music\" -Value \"$env:userprofile\\Music\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"My Video\" -Value \"$env:userprofile\\Videos\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"NetHood\" -Value \"$env:userprofile\\AppData\\Roaming\\Microsoft\\Windows\\Network Shortcuts\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"PrintHood\" -Value \"$env:userprofile\\AppData\\Roaming\\Microsoft\\Windows\\Printer Shortcuts\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"Programs\" -Value \"$env:userprofile\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"Recent\" -Value \"$env:userprofile\\AppData\\Roaming\\Microsoft\\Windows\\Recent\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"SendTo\" -Value \"$env:userprofile\\AppData\\Roaming\\Microsoft\\Windows\\SendTo\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"Start Menu\" -Value \"$env:userprofile\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"Startup\" -Value \"$env:userprofile\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"Templates\" -Value \"$env:userprofile\\AppData\\Roaming\\Microsoft\\Windows\\Templates\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"{374DE290-123F-4565-9164-39C4925E467B}\" -Value \"$env:userprofile\\Downloads\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"Desktop\" -Value \"$env:userprofile\\Desktop\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"My Pictures\" -Value \"$env:userprofile\\Pictures\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"Personal\" -Value \"$env:userprofile\\Documents\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"{F42EE2D3-909F-4907-8871-4C22FC0BF756}\" -Value \"$env:userprofile\\Documents\" -Type ExpandString\n        Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\" -Name \"{0DDD015D-B06C-45D5-8C4C-F59713854639}\" -Value \"$env:userprofile\\Pictures\" -Type ExpandString\n        Write-Host \"Restarting explorer\"\n        taskkill.exe /F /IM \"explorer.exe\"\n        Start-Process \"explorer.exe\"\n  \n        Write-Host \"Waiting for explorer to complete loading\"\n        Write-Host \"Please Note - The OneDrive folder at $OneDrivePath may still have items in it. You must manually delete it, but all the files should already be copied to the base user folder.\"\n        Write-Host \"If there are Files missing afterwards, please Login to Onedrive.com and Download them manually\" -ForegroundColor Yellow\n        Start-Sleep 5\n        } else {\n        Write-Host \"Something went Wrong during the Unistallation of OneDrive\" -ForegroundColor Red\n        }",
        "unapply": "Write-Host \"Install OneDrive\"\nStart-Process -FilePath winget -ArgumentList \"install -e --accept-source-agreements --accept-package-agreements --silent Microsoft.OneDrive \" -NoNewWindow -Wait"
      }
    },
    {
      "id": "revert-context-menu",
      "title": "Revert Context Menu",
      "description": "Reverts the context menu to the default Windows 10 context menu.",
      "category": ["General", "Appearance"],
      "recommended": true,
      "reversible": true,
      "docsurl": "https://docs.getsparkle.net/tweaks/revert-context-menu",
      "source": "https://github.com/Parcoil/Sparkle/blob/v2/tweaks/revert-context-menu/meta.json",
      "scripts": {
        "apply": "New-Item -Path \"HKCU:\\Software\\Classes\\CLSID\\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}\" -Name \"InprocServer32\" -force -value \"\"\nStop-Process -Name \"explorer\" -Force\nStart-Process \"explorer.exe\"",
        "unapply": "Remove-Item -Path \"HKCU:\\Software\\Classes\\CLSID\\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}\" -Recurse -Confirm:$false -Force\nStop-Process -Name \"explorer\" -Force\nStart-Process \"explorer.exe\""
      }
    },
    {
      "id": "run-disk-cleanup",
      "title": "Run Disk Cleanup",
      "description": "Runs disk cleanup on your C: drive. also removes old windows update cache",
      "category": ["General", "Performance"],
      "recommended": false,
      "reversible": true,
      "docsurl": "https://docs.getsparkle.net/tweaks/run-disk-cleanup",
      "source": "https://github.com/Parcoil/Sparkle/blob/v2/tweaks/run-disk-cleanup/meta.json",
      "scripts": {
        "apply": "cleanmgr.exe /d C: /VERYLOWDISK\nDism.exe /online /Cleanup-Image /StartComponentCleanup /ResetBase",
        "unapply": null
      }
    },
    {
      "id": "set-powershell7-default",
      "title": "Set PowerShell 7 as Default",
      "description": "Sets PowerShell 7 as the default profile in Windows Terminal (installs PS7 if missing)",
      "category": ["General"],
      "recommended": false,
      "reversible": true,
      "docsurl": "https://docs.getsparkle.net/tweaks/set-powershell7-default",
      "source": "https://github.com/Parcoil/Sparkle/blob/v2/tweaks/set-powershell7-default/meta.json",
      "scripts": {
        "apply": "if (Test-Path -Path \"$env:ProgramFiles\\PowerShell\\7\") {\n    Write-Host \"PowerShell 7 is already installed.\"\n} else {\n    Write-Host \"Installing PowerShell 7...\"\n    winget install --id Microsoft.PowerShell --silent\n}\n\n$targetTerminalName = \"PowerShell\"\n\nif (-not (Get-Command \"wt\" -ErrorAction SilentlyContinue)) {\n    Write-Host \"Windows Terminal not installed. Exiting...\"\n    exit\n}\n\n$settingsPath = \"$env:LOCALAPPDATA\\Packages\\Microsoft.WindowsTerminal_8wekyb3d8bbwe\\LocalState\\settings.json\"\nif (-not (Test-Path -Path $settingsPath)) {\n    Write-Host \"Windows Terminal settings.json not found.\"\n    exit\n}\n\n$settingsContent = Get-Content -Path $settingsPath | ConvertFrom-Json\n$ps7Profile = $settingsContent.profiles.list | Where-Object { $_.name -eq $targetTerminalName }\n\nif ($ps7Profile) {\n    $settingsContent.defaultProfile = $ps7Profile.guid\n    $settingsContent | ConvertTo-Json -Depth 100 | Set-Content -Path $settingsPath\n    Write-Host \"Default profile set to PowerShell 7\"\n} else {\n    Write-Host \"No PowerShell 7 profile found.\"\n}\n",
        "unapply": "$targetTerminalName = \"Windows PowerShell\"\n\nif (-not (Get-Command \"wt\" -ErrorAction SilentlyContinue)) {\n    Write-Host \"Windows Terminal not installed. Exiting...\"\n    exit\n}\n\n$settingsPath = \"$env:LOCALAPPDATA\\Packages\\Microsoft.WindowsTerminal_8wekyb3d8bbwe\\LocalState\\settings.json\"\nif (-not (Test-Path -Path $settingsPath)) {\n    Write-Host \"Windows Terminal settings.json not found.\"\n    exit\n}\n\n$settingsContent = Get-Content -Path $settingsPath | ConvertFrom-Json\n$ps5Profile = $settingsContent.profiles.list | Where-Object { $_.name -eq $targetTerminalName }\n\nif ($ps5Profile) {\n    $settingsContent.defaultProfile = $ps5Profile.guid\n    $settingsContent | ConvertTo-Json -Depth 100 | Set-Content -Path $settingsPath\n    Write-Host \"Default profile reverted to PowerShell 5\"\n} else {\n    Write-Host \"No Windows PowerShell profile found.\"\n}\n"
      }
    },
    {
      "id": "set-services-to-manual",
      "title": "Set Services to Manual",
      "description": "Sets various Windows services to Manual startup type to improve performance.",
      "category": ["Performance", "Gaming"],
      "recommended": true,
      "reversible": true,
      "docsurl": "https://docs.getsparkle.net/tweaks/set-services-to-manual",
      "source": "https://github.com/Parcoil/Sparkle/blob/v2/tweaks/set-services-to-manual/meta.json",
      "scripts": {
        "apply": "      $services = @(\n      @{ Name = \"AJRouter\"; StartupType = \"Disabled\" },\n      @{ Name = \"ALG\"; StartupType = \"Manual\" },\n      @{ Name = \"AppIDSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"AppMgmt\"; StartupType = \"Manual\" },\n      @{ Name = \"AppReadiness\"; StartupType = \"Manual\" },\n      @{ Name = \"AppVClient\"; StartupType = \"Disabled\" },\n      @{ Name = \"AppXSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"Appinfo\"; StartupType = \"Manual\" },\n      @{ Name = \"AssignedAccessManagerSvc\"; StartupType = \"Disabled\" },\n      @{ Name = \"AudioEndpointBuilder\"; StartupType = \"Automatic\" },\n      @{ Name = \"AudioSrv\"; StartupType = \"Automatic\" },\n      @{ Name = \"Audiosrv\"; StartupType = \"Automatic\" },\n      @{ Name = \"AxInstSV\"; StartupType = \"Manual\" },\n      @{ Name = \"BDESVC\"; StartupType = \"Manual\" },\n      @{ Name = \"BFE\"; StartupType = \"Automatic\" },\n      @{ Name = \"BITS\"; StartupType = \"AutomaticDelayedStart\" },\n      @{ Name = \"BTAGService\"; StartupType = \"Manual\" },\n      @{ Name = \"BcastDVRUserService_*\"; StartupType = \"Manual\" },\n      @{ Name = \"BluetoothUserService_*\"; StartupType = \"Manual\" },\n      @{ Name = \"BrokerInfrastructure\"; StartupType = \"Automatic\" },\n      @{ Name = \"Browser\"; StartupType = \"Manual\" },\n      @{ Name = \"BthAvctpSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"BthHFSrv\"; StartupType = \"Automatic\" },\n      @{ Name = \"CDPSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"CDPUserSvc_*\"; StartupType = \"Automatic\" },\n      @{ Name = \"COMSysApp\"; StartupType = \"Manual\" },\n      @{ Name = \"CaptureService_*\"; StartupType = \"Manual\" },\n      @{ Name = \"CertPropSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"ClipSVC\"; StartupType = \"Manual\" },\n      @{ Name = \"ConsentUxUserSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"CoreMessagingRegistrar\"; StartupType = \"Automatic\" },\n      @{ Name = \"CredentialEnrollmentManagerUserSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"CryptSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"CscService\"; StartupType = \"Manual\" },\n      @{ Name = \"DPS\"; StartupType = \"Automatic\" },\n      @{ Name = \"DcomLaunch\"; StartupType = \"Automatic\" },\n      @{ Name = \"DcpSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"DevQueryBroker\"; StartupType = \"Manual\" },\n      @{ Name = \"DeviceAssociationBrokerSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"DeviceAssociationService\"; StartupType = \"Manual\" },\n      @{ Name = \"DeviceInstall\"; StartupType = \"Manual\" },\n      @{ Name = \"DevicePickerUserSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"DevicesFlowUserSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"Dhcp\"; StartupType = \"Automatic\" },\n      @{ Name = \"DiagTrack\"; StartupType = \"Disabled\" },\n      @{ Name = \"DialogBlockingService\"; StartupType = \"Disabled\" },\n      @{ Name = \"DispBrokerDesktopSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"DisplayEnhancementService\"; StartupType = \"Manual\" },\n      @{ Name = \"DmEnrollmentSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"Dnscache\"; StartupType = \"Automatic\" },\n      @{ Name = \"DoSvc\"; StartupType = \"AutomaticDelayedStart\" },\n      @{ Name = \"DsSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"DsmSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"DusmSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"EFS\"; StartupType = \"Manual\" },\n      @{ Name = \"EapHost\"; StartupType = \"Manual\" },\n      @{ Name = \"EntAppSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"EventLog\"; StartupType = \"Automatic\" },\n      @{ Name = \"EventSystem\"; StartupType = \"Automatic\" },\n      @{ Name = \"FDResPub\"; StartupType = \"Manual\" },\n      @{ Name = \"Fax\"; StartupType = \"Manual\" },\n      @{ Name = \"FontCache\"; StartupType = \"Automatic\" },\n      @{ Name = \"FrameServer\"; StartupType = \"Manual\" },\n      @{ Name = \"FrameServerMonitor\"; StartupType = \"Manual\" },\n      @{ Name = \"GraphicsPerfSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"HomeGroupListener\"; StartupType = \"Manual\" },\n      @{ Name = \"HomeGroupProvider\"; StartupType = \"Manual\" },\n      @{ Name = \"HvHost\"; StartupType = \"Manual\" },\n      @{ Name = \"IEEtwCollectorService\"; StartupType = \"Manual\" },\n      @{ Name = \"IKEEXT\"; StartupType = \"Manual\" },\n      @{ Name = \"InstallService\"; StartupType = \"Manual\" },\n      @{ Name = \"InventorySvc\"; StartupType = \"Manual\" },\n      @{ Name = \"IpxlatCfgSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"KeyIso\"; StartupType = \"Automatic\" },\n      @{ Name = \"KtmRm\"; StartupType = \"Manual\" },\n      @{ Name = \"LSM\"; StartupType = \"Automatic\" },\n      @{ Name = \"LanmanServer\"; StartupType = \"Automatic\" },\n      @{ Name = \"LanmanWorkstation\"; StartupType = \"Automatic\" },\n      @{ Name = \"LicenseManager\"; StartupType = \"Manual\" },\n      @{ Name = \"LxpSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"MSDTC\"; StartupType = \"Manual\" },\n      @{ Name = \"MSiSCSI\"; StartupType = \"Manual\" },\n      @{ Name = \"MapsBroker\"; StartupType = \"AutomaticDelayedStart\" },\n      @{ Name = \"McpManagementService\"; StartupType = \"Manual\" },\n      @{ Name = \"MessagingService_*\"; StartupType = \"Manual\" },\n      @{ Name = \"MicrosoftEdgeElevationService\"; StartupType = \"Manual\" },\n      @{ Name = \"MixedRealityOpenXRSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"MpsSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"MsKeyboardFilter\"; StartupType = \"Manual\" },\n      @{ Name = \"NPSMSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"NaturalAuthentication\"; StartupType = \"Manual\" },\n      @{ Name = \"NcaSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"NcbService\"; StartupType = \"Manual\" },\n      @{ Name = \"NcdAutoSetup\"; StartupType = \"Manual\" },\n      @{ Name = \"NetSetupSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"NetTcpPortSharing\"; StartupType = \"Disabled\" },\n      @{ Name = \"Netlogon\"; StartupType = \"Automatic\" },\n      @{ Name = \"Netman\"; StartupType = \"Manual\" },\n      @{ Name = \"NgcCtnrSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"NgcSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"NlaSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"OneSyncSvc_*\"; StartupType = \"Automatic\" },\n      @{ Name = \"P9RdrService_*\"; StartupType = \"Manual\" },\n      @{ Name = \"PNRPAutoReg\"; StartupType = \"Manual\" },\n      @{ Name = \"PNRPsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"PcaSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"PeerDistSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"PenService_*\"; StartupType = \"Manual\" },\n      @{ Name = \"PerfHost\"; StartupType = \"Manual\" },\n      @{ Name = \"PhoneSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"PimIndexMaintenanceSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"PlugPlay\"; StartupType = \"Manual\" },\n      @{ Name = \"PolicyAgent\"; StartupType = \"Manual\" },\n      @{ Name = \"Power\"; StartupType = \"Automatic\" },\n      @{ Name = \"PrintNotify\"; StartupType = \"Manual\" },\n      @{ Name = \"PrintWorkflowUserSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"ProfSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"PushToInstall\"; StartupType = \"Manual\" },\n      @{ Name = \"QWAVE\"; StartupType = \"Manual\" },\n      @{ Name = \"RasAuto\"; StartupType = \"Manual\" },\n      @{ Name = \"RasMan\"; StartupType = \"Manual\" },\n      @{ Name = \"RemoteAccess\"; StartupType = \"Disabled\" },\n      @{ Name = \"RemoteRegistry\"; StartupType = \"Disabled\" },\n      @{ Name = \"RetailDemo\"; StartupType = \"Manual\" },\n      @{ Name = \"RmSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"RpcEptMapper\"; StartupType = \"Automatic\" },\n      @{ Name = \"RpcLocator\"; StartupType = \"Manual\" },\n      @{ Name = \"RpcSs\"; StartupType = \"Automatic\" },\n      @{ Name = \"SCPolicySvc\"; StartupType = \"Manual\" },\n      @{ Name = \"SCardSvr\"; StartupType = \"Manual\" },\n      @{ Name = \"SDRSVC\"; StartupType = \"Manual\" },\n      @{ Name = \"SEMgrSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"SENS\"; StartupType = \"Automatic\" },\n      @{ Name = \"SNMPTRAP\"; StartupType = \"Manual\" },\n      @{ Name = \"SNMPTrap\"; StartupType = \"Manual\" },\n      @{ Name = \"SSDPSRV\"; StartupType = \"Manual\" },\n      @{ Name = \"SamSs\"; StartupType = \"Automatic\" },\n      @{ Name = \"ScDeviceEnum\"; StartupType = \"Manual\" },\n      @{ Name = \"Schedule\"; StartupType = \"Automatic\" },\n      @{ Name = \"SecurityHealthService\"; StartupType = \"Manual\" },\n      @{ Name = \"Sense\"; StartupType = \"Manual\" },\n      @{ Name = \"SensorDataService\"; StartupType = \"Manual\" },\n      @{ Name = \"SensorService\"; StartupType = \"Manual\" },\n      @{ Name = \"SensrSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"SessionEnv\"; StartupType = \"Manual\" },\n      @{ Name = \"SgrmBroker\"; StartupType = \"Automatic\" },\n      @{ Name = \"SharedAccess\"; StartupType = \"Manual\" },\n      @{ Name = \"SharedRealitySvc\"; StartupType = \"Manual\" },\n      @{ Name = \"ShellHWDetection\"; StartupType = \"Automatic\" },\n      @{ Name = \"SmsRouter\"; StartupType = \"Manual\" },\n      @{ Name = \"Spooler\"; StartupType = \"Automatic\" },\n      @{ Name = \"SstpSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"StateRepository\"; StartupType = \"Manual\" },\n      @{ Name = \"StiSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"StorSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"SysMain\"; StartupType = \"Automatic\" },\n      @{ Name = \"SystemEventsBroker\"; StartupType = \"Automatic\" },\n      @{ Name = \"TabletInputService\"; StartupType = \"Manual\" },\n      @{ Name = \"TapiSrv\"; StartupType = \"Manual\" },\n      @{ Name = \"TermService\"; StartupType = \"Automatic\" },\n      @{ Name = \"TextInputManagementService\"; StartupType = \"Manual\" },\n      @{ Name = \"Themes\"; StartupType = \"Automatic\" },\n      @{ Name = \"TieringEngineService\"; StartupType = \"Manual\" },\n      @{ Name = \"TimeBroker\"; StartupType = \"Manual\" },\n      @{ Name = \"TimeBrokerSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"TokenBroker\"; StartupType = \"Manual\" },\n      @{ Name = \"TrkWks\"; StartupType = \"Automatic\" },\n      @{ Name = \"TroubleshootingSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"TrustedInstaller\"; StartupType = \"Manual\" },\n      @{ Name = \"UI0Detect\"; StartupType = \"Manual\" },\n      @{ Name = \"UdkUserSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"UevAgentService\"; StartupType = \"Disabled\" },\n      @{ Name = \"UmRdpService\"; StartupType = \"Manual\" },\n      @{ Name = \"UnistoreSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"UserDataSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"UserManager\"; StartupType = \"Automatic\" },\n      @{ Name = \"UsoSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"VGAuthService\"; StartupType = \"Automatic\" },\n      @{ Name = \"VMTools\"; StartupType = \"Automatic\" },\n      @{ Name = \"VSS\"; StartupType = \"Manual\" },\n      @{ Name = \"VacSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"VaultSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"W32Time\"; StartupType = \"Manual\" },\n      @{ Name = \"WEPHOSTSVC\"; StartupType = \"Manual\" },\n      @{ Name = \"WFDSConMgrSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WMPNetworkSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WManSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WPDBusEnum\"; StartupType = \"Manual\" },\n      @{ Name = \"WSService\"; StartupType = \"Manual\" },\n      @{ Name = \"WSearch\"; StartupType = \"AutomaticDelayedStart\" },\n      @{ Name = \"WaaSMedicSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WalletService\"; StartupType = \"Manual\" },\n      @{ Name = \"WarpJITSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WbioSrvc\"; StartupType = \"Manual\" },\n      @{ Name = \"Wcmsvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"WcsPlugInService\"; StartupType = \"Manual\" },\n      @{ Name = \"WdNisSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WdiServiceHost\"; StartupType = \"Manual\" },\n      @{ Name = \"WdiSystemHost\"; StartupType = \"Manual\" },\n      @{ Name = \"WebClient\"; StartupType = \"Manual\" },\n      @{ Name = \"Wecsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WerSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WiaRpc\"; StartupType = \"Manual\" },\n      @{ Name = \"WinDefend\"; StartupType = \"Automatic\" },\n      @{ Name = \"WinHttpAutoProxySvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WinRM\"; StartupType = \"Manual\" },\n      @{ Name = \"Winmgmt\"; StartupType = \"Automatic\" },\n      @{ Name = \"WlanSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"WpcMonSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WpnService\"; StartupType = \"Manual\" },\n      @{ Name = \"WpnUserService_*\"; StartupType = \"Automatic\" },\n      @{ Name = \"XblAuthManager\"; StartupType = \"Manual\" },\n      @{ Name = \"XblGameSave\"; StartupType = \"Manual\" },\n      @{ Name = \"XboxGipSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"XboxNetApiSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"autotimesvc\"; StartupType = \"Manual\" },\n      @{ Name = \"bthserv\"; StartupType = \"Manual\" },\n      @{ Name = \"camsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"cbdhsvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"cloudidsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"dcsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"defragsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"diagnosticshub.standardcollector.service\"; StartupType = \"Manual\" },\n      @{ Name = \"diagsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"dmwappushservice\"; StartupType = \"Manual\" },\n      @{ Name = \"dot3svc\"; StartupType = \"Manual\" },\n      @{ Name = \"edgeupdate\"; StartupType = \"Manual\" },\n      @{ Name = \"edgeupdatem\"; StartupType = \"Manual\" },\n      @{ Name = \"embeddedmode\"; StartupType = \"Manual\" },\n      @{ Name = \"fdPHost\"; StartupType = \"Manual\" },\n      @{ Name = \"fhsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"gpsvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"hidserv\"; StartupType = \"Manual\" },\n      @{ Name = \"icssvc\"; StartupType = \"Manual\" },\n      @{ Name = \"iphlpsvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"lfsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"lltdsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"lmhosts\"; StartupType = \"Manual\" },\n      @{ Name = \"mpssvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"msiserver\"; StartupType = \"Manual\" },\n      @{ Name = \"netprofm\"; StartupType = \"Manual\" },\n      @{ Name = \"nsi\"; StartupType = \"Automatic\" },\n      @{ Name = \"p2pimsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"p2psvc\"; StartupType = \"Manual\" },\n      @{ Name = \"perceptionsimulation\"; StartupType = \"Manual\" },\n      @{ Name = \"pla\"; StartupType = \"Manual\" },\n      @{ Name = \"seclogon\"; StartupType = \"Manual\" },\n      @{ Name = \"shpamsvc\"; StartupType = \"Disabled\" },\n      @{ Name = \"smphost\"; StartupType = \"Manual\" },\n      @{ Name = \"spectrum\"; StartupType = \"Manual\" },\n      @{ Name = \"sppsvc\"; StartupType = \"AutomaticDelayedStart\" },\n      @{ Name = \"ssh-agent\"; StartupType = \"Disabled\" },\n      @{ Name = \"svsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"swprv\"; StartupType = \"Manual\" },\n      @{ Name = \"tiledatamodelsvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"tzautoupdate\"; StartupType = \"Disabled\" },\n      @{ Name = \"uhssvc\"; StartupType = \"Disabled\" },\n      @{ Name = \"upnphost\"; StartupType = \"Manual\" },\n      @{ Name = \"vds\"; StartupType = \"Manual\" },\n      @{ Name = \"vm3dservice\"; StartupType = \"Manual\" },\n      @{ Name = \"vmicguestinterface\"; StartupType = \"Manual\" },\n      @{ Name = \"vmicheartbeat\"; StartupType = \"Manual\" },\n      @{ Name = \"vmickvpexchange\"; StartupType = \"Manual\" },\n      @{ Name = \"vmicrdv\"; StartupType = \"Manual\" },\n      @{ Name = \"vmicshutdown\"; StartupType = \"Manual\" },\n      @{ Name = \"vmictimesync\"; StartupType = \"Manual\" },\n      @{ Name = \"vmicvmsession\"; StartupType = \"Manual\" },\n      @{ Name = \"vmicvss\"; StartupType = \"Manual\" },\n      @{ Name = \"vmvss\"; StartupType = \"Manual\" },\n      @{ Name = \"wbengine\"; StartupType = \"Manual\" },\n      @{ Name = \"wcncsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"webthreatdefsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"webthreatdefusersvc_*\"; StartupType = \"Automatic\" },\n      @{ Name = \"wercplsupport\"; StartupType = \"Manual\" },\n      @{ Name = \"wisvc\"; StartupType = \"Manual\" },\n      @{ Name = \"wlidsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"wlpasvc\"; StartupType = \"Manual\" },\n      @{ Name = \"wmiApSrv\"; StartupType = \"Manual\" },\n      @{ Name = \"workfolderssvc\"; StartupType = \"Manual\" },\n      @{ Name = \"wscsvc\"; StartupType = \"AutomaticDelayedStart\" },\n      @{ Name = \"wuauserv\"; StartupType = \"Manual\" },\n      @{ Name = \"wudfsvc\"; StartupType = \"Manual\" }\n  )\n\n  foreach ($svc in $services) {\n    try {\n        Set-Service -Name $svc.Name -StartupType $svc.StartupType -ErrorAction Stop\n        Write-Output \"Set $($svc.Name) to $($svc.StartupType)\"\n    } catch {\n        Write-Warning \"Failed to set $($svc.Name): $_\"\n    }\n}",
        "unapply": "$services = @(\n      @{ Name = \"AJRouter\"; StartupType = \"Manual\" },\n      @{ Name = \"ALG\"; StartupType = \"Manual\" },\n      @{ Name = \"AppIDSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"AppMgmt\"; StartupType = \"Manual\" },\n      @{ Name = \"AppReadiness\"; StartupType = \"Manual\" },\n      @{ Name = \"AppVClient\"; StartupType = \"Disabled\" },\n      @{ Name = \"AppXSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"Appinfo\"; StartupType = \"Manual\" },\n      @{ Name = \"AssignedAccessManagerSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"AudioEndpointBuilder\"; StartupType = \"Automatic\" },\n      @{ Name = \"AudioSrv\"; StartupType = \"Automatic\" },\n      @{ Name = \"Audiosrv\"; StartupType = \"Automatic\" },\n      @{ Name = \"AxInstSV\"; StartupType = \"Manual\" },\n      @{ Name = \"BDESVC\"; StartupType = \"Manual\" },\n      @{ Name = \"BFE\"; StartupType = \"Automatic\" },\n      @{ Name = \"BITS\"; StartupType = \"Automatic\" },\n      @{ Name = \"BTAGService\"; StartupType = \"Manual\" },\n      @{ Name = \"BcastDVRUserService_*\"; StartupType = \"Manual\" },\n      @{ Name = \"BluetoothUserService_*\"; StartupType = \"Manual\" },\n      @{ Name = \"BrokerInfrastructure\"; StartupType = \"Automatic\" },\n      @{ Name = \"Browser\"; StartupType = \"Manual\" },\n      @{ Name = \"BthAvctpSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"BthHFSrv\"; StartupType = \"Automatic\" },\n      @{ Name = \"CDPSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"CDPUserSvc_*\"; StartupType = \"Automatic\" },\n      @{ Name = \"COMSysApp\"; StartupType = \"Manual\" },\n      @{ Name = \"CaptureService_*\"; StartupType = \"Manual\" },\n      @{ Name = \"CertPropSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"ClipSVC\"; StartupType = \"Manual\" },\n      @{ Name = \"ConsentUxUserSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"CoreMessagingRegistrar\"; StartupType = \"Automatic\" },\n      @{ Name = \"CredentialEnrollmentManagerUserSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"CryptSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"CscService\"; StartupType = \"Manual\" },\n      @{ Name = \"DPS\"; StartupType = \"Automatic\" },\n      @{ Name = \"DcomLaunch\"; StartupType = \"Automatic\" },\n      @{ Name = \"DcpSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"DevQueryBroker\"; StartupType = \"Manual\" },\n      @{ Name = \"DeviceAssociationBrokerSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"DeviceAssociationService\"; StartupType = \"Manual\" },\n      @{ Name = \"DeviceInstall\"; StartupType = \"Manual\" },\n      @{ Name = \"DevicePickerUserSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"DevicesFlowUserSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"Dhcp\"; StartupType = \"Automatic\" },\n      @{ Name = \"DiagTrack\"; StartupType = \"Automatic\" },\n      @{ Name = \"DialogBlockingService\"; StartupType = \"Disabled\" },\n      @{ Name = \"DispBrokerDesktopSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"DisplayEnhancementService\"; StartupType = \"Manual\" },\n      @{ Name = \"DmEnrollmentSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"Dnscache\"; StartupType = \"Automatic\" },\n      @{ Name = \"DoSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"DsSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"DsmSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"DusmSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"EFS\"; StartupType = \"Manual\" },\n      @{ Name = \"EapHost\"; StartupType = \"Manual\" },\n      @{ Name = \"EntAppSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"EventLog\"; StartupType = \"Automatic\" },\n      @{ Name = \"EventSystem\"; StartupType = \"Automatic\" },\n      @{ Name = \"FDResPub\"; StartupType = \"Manual\" },\n      @{ Name = \"Fax\"; StartupType = \"Manual\" },\n      @{ Name = \"FontCache\"; StartupType = \"Automatic\" },\n      @{ Name = \"FrameServer\"; StartupType = \"Manual\" },\n      @{ Name = \"FrameServerMonitor\"; StartupType = \"Manual\" },\n      @{ Name = \"GraphicsPerfSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"HomeGroupListener\"; StartupType = \"Manual\" },\n      @{ Name = \"HomeGroupProvider\"; StartupType = \"Manual\" },\n      @{ Name = \"HvHost\"; StartupType = \"Manual\" },\n      @{ Name = \"IEEtwCollectorService\"; StartupType = \"Manual\" },\n      @{ Name = \"IKEEXT\"; StartupType = \"Manual\" },\n      @{ Name = \"InstallService\"; StartupType = \"Manual\" },\n      @{ Name = \"InventorySvc\"; StartupType = \"Manual\" },\n      @{ Name = \"IpxlatCfgSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"KeyIso\"; StartupType = \"Automatic\" },\n      @{ Name = \"KtmRm\"; StartupType = \"Manual\" },\n      @{ Name = \"LSM\"; StartupType = \"Automatic\" },\n      @{ Name = \"LanmanServer\"; StartupType = \"Automatic\" },\n      @{ Name = \"LanmanWorkstation\"; StartupType = \"Automatic\" },\n      @{ Name = \"LicenseManager\"; StartupType = \"Manual\" },\n      @{ Name = \"LxpSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"MSDTC\"; StartupType = \"Manual\" },\n      @{ Name = \"MSiSCSI\"; StartupType = \"Manual\" },\n      @{ Name = \"MapsBroker\"; StartupType = \"Automatic\" },\n      @{ Name = \"McpManagementService\"; StartupType = \"Manual\" },\n      @{ Name = \"MessagingService_*\"; StartupType = \"Manual\" },\n      @{ Name = \"MicrosoftEdgeElevationService\"; StartupType = \"Manual\" },\n      @{ Name = \"MixedRealityOpenXRSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"MpsSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"MsKeyboardFilter\"; StartupType = \"Disabled\" },\n      @{ Name = \"NPSMSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"NaturalAuthentication\"; StartupType = \"Manual\" },\n      @{ Name = \"NcaSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"NcbService\"; StartupType = \"Manual\" },\n      @{ Name = \"NcdAutoSetup\"; StartupType = \"Manual\" },\n      @{ Name = \"NetSetupSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"NetTcpPortSharing\"; StartupType = \"Disabled\" },\n      @{ Name = \"Netlogon\"; StartupType = \"Automatic\" },\n      @{ Name = \"Netman\"; StartupType = \"Manual\" },\n      @{ Name = \"NgcCtnrSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"NgcSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"NlaSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"OneSyncSvc_*\"; StartupType = \"Automatic\" },\n      @{ Name = \"P9RdrService_*\"; StartupType = \"Manual\" },\n      @{ Name = \"PNRPAutoReg\"; StartupType = \"Manual\" },\n      @{ Name = \"PNRPsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"PcaSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"PeerDistSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"PenService_*\"; StartupType = \"Manual\" },\n      @{ Name = \"PerfHost\"; StartupType = \"Manual\" },\n      @{ Name = \"PhoneSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"PimIndexMaintenanceSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"PlugPlay\"; StartupType = \"Manual\" },\n      @{ Name = \"PolicyAgent\"; StartupType = \"Manual\" },\n      @{ Name = \"Power\"; StartupType = \"Automatic\" },\n      @{ Name = \"PrintNotify\"; StartupType = \"Manual\" },\n      @{ Name = \"PrintWorkflowUserSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"ProfSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"PushToInstall\"; StartupType = \"Manual\" },\n      @{ Name = \"QWAVE\"; StartupType = \"Manual\" },\n      @{ Name = \"RasAuto\"; StartupType = \"Manual\" },\n      @{ Name = \"RasMan\"; StartupType = \"Manual\" },\n      @{ Name = \"RemoteAccess\"; StartupType = \"Disabled\" },\n      @{ Name = \"RemoteRegistry\"; StartupType = \"Disabled\" },\n      @{ Name = \"RetailDemo\"; StartupType = \"Manual\" },\n      @{ Name = \"RmSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"RpcEptMapper\"; StartupType = \"Automatic\" },\n      @{ Name = \"RpcLocator\"; StartupType = \"Manual\" },\n      @{ Name = \"RpcSs\"; StartupType = \"Automatic\" },\n      @{ Name = \"SCPolicySvc\"; StartupType = \"Manual\" },\n      @{ Name = \"SCardSvr\"; StartupType = \"Manual\" },\n      @{ Name = \"SDRSVC\"; StartupType = \"Manual\" },\n      @{ Name = \"SEMgrSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"SENS\"; StartupType = \"Automatic\" },\n      @{ Name = \"SNMPTRAP\"; StartupType = \"Manual\" },\n      @{ Name = \"SNMPTrap\"; StartupType = \"Manual\" },\n      @{ Name = \"SSDPSRV\"; StartupType = \"Manual\" },\n      @{ Name = \"SamSs\"; StartupType = \"Automatic\" },\n      @{ Name = \"ScDeviceEnum\"; StartupType = \"Manual\" },\n      @{ Name = \"Schedule\"; StartupType = \"Automatic\" },\n      @{ Name = \"SecurityHealthService\"; StartupType = \"Manual\" },\n      @{ Name = \"Sense\"; StartupType = \"Manual\" },\n      @{ Name = \"SensorDataService\"; StartupType = \"Manual\" },\n      @{ Name = \"SensorService\"; StartupType = \"Manual\" },\n      @{ Name = \"SensrSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"SessionEnv\"; StartupType = \"Manual\" },\n      @{ Name = \"SgrmBroker\"; StartupType = \"Automatic\" },\n      @{ Name = \"SharedAccess\"; StartupType = \"Manual\" },\n      @{ Name = \"SharedRealitySvc\"; StartupType = \"Manual\" },\n      @{ Name = \"ShellHWDetection\"; StartupType = \"Automatic\" },\n      @{ Name = \"SmsRouter\"; StartupType = \"Manual\" },\n      @{ Name = \"Spooler\"; StartupType = \"Automatic\" },\n      @{ Name = \"SstpSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"StateRepository\"; StartupType = \"Automatic\" },\n      @{ Name = \"StiSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"StorSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"SysMain\"; StartupType = \"Automatic\" },\n      @{ Name = \"SystemEventsBroker\"; StartupType = \"Automatic\" },\n      @{ Name = \"TabletInputService\"; StartupType = \"Manual\" },\n      @{ Name = \"TapiSrv\"; StartupType = \"Manual\" },\n      @{ Name = \"TermService\"; StartupType = \"Automatic\" },\n      @{ Name = \"TextInputManagementService\"; StartupType = \"Automatic\" },\n      @{ Name = \"Themes\"; StartupType = \"Automatic\" },\n      @{ Name = \"TieringEngineService\"; StartupType = \"Manual\" },\n      @{ Name = \"TimeBroker\"; StartupType = \"Manual\" },\n      @{ Name = \"TimeBrokerSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"TokenBroker\"; StartupType = \"Manual\" },\n      @{ Name = \"TrkWks\"; StartupType = \"Automatic\" },\n      @{ Name = \"TroubleshootingSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"TrustedInstaller\"; StartupType = \"Manual\" },\n      @{ Name = \"UI0Detect\"; StartupType = \"Manual\" },\n      @{ Name = \"UdkUserSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"UevAgentService\"; StartupType = \"Disabled\" },\n      @{ Name = \"UmRdpService\"; StartupType = \"Manual\" },\n      @{ Name = \"UnistoreSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"UserDataSvc_*\"; StartupType = \"Manual\" },\n      @{ Name = \"UserManager\"; StartupType = \"Automatic\" },\n      @{ Name = \"UsoSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"VGAuthService\"; StartupType = \"Automatic\" },\n      @{ Name = \"VMTools\"; StartupType = \"Automatic\" },\n      @{ Name = \"VSS\"; StartupType = \"Manual\" },\n      @{ Name = \"VacSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"VaultSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"W32Time\"; StartupType = \"Manual\" },\n      @{ Name = \"WEPHOSTSVC\"; StartupType = \"Manual\" },\n      @{ Name = \"WFDSConMgrSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WMPNetworkSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WManSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WPDBusEnum\"; StartupType = \"Manual\" },\n      @{ Name = \"WSService\"; StartupType = \"Manual\" },\n      @{ Name = \"WSearch\"; StartupType = \"Automatic\" },\n      @{ Name = \"WaaSMedicSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WalletService\"; StartupType = \"Manual\" },\n      @{ Name = \"WarpJITSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WbioSrvc\"; StartupType = \"Manual\" },\n      @{ Name = \"Wcmsvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"WcsPlugInService\"; StartupType = \"Manual\" },\n      @{ Name = \"WdNisSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WdiServiceHost\"; StartupType = \"Manual\" },\n      @{ Name = \"WdiSystemHost\"; StartupType = \"Manual\" },\n      @{ Name = \"WebClient\"; StartupType = \"Manual\" },\n      @{ Name = \"Wecsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WerSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WiaRpc\"; StartupType = \"Manual\" },\n      @{ Name = \"WinDefend\"; StartupType = \"Automatic\" },\n      @{ Name = \"WinHttpAutoProxySvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WinRM\"; StartupType = \"Manual\" },\n      @{ Name = \"Winmgmt\"; StartupType = \"Automatic\" },\n      @{ Name = \"WlanSvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"WpcMonSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"WpnService\"; StartupType = \"Automatic\" },\n      @{ Name = \"WpnUserService_*\"; StartupType = \"Automatic\" },\n      @{ Name = \"XblAuthManager\"; StartupType = \"Manual\" },\n      @{ Name = \"XblGameSave\"; StartupType = \"Manual\" },\n      @{ Name = \"XboxGipSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"XboxNetApiSvc\"; StartupType = \"Manual\" },\n      @{ Name = \"autotimesvc\"; StartupType = \"Manual\" },\n      @{ Name = \"bthserv\"; StartupType = \"Manual\" },\n      @{ Name = \"camsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"cbdhsvc_*\"; StartupType = \"Automatic\" },\n      @{ Name = \"cloudidsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"dcsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"defragsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"diagnosticshub.standardcollector.service\"; StartupType = \"Manual\" },\n      @{ Name = \"diagsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"dmwappushservice\"; StartupType = \"Manual\" },\n      @{ Name = \"dot3svc\"; StartupType = \"Manual\" },\n      @{ Name = \"edgeupdate\"; StartupType = \"Automatic\" },\n      @{ Name = \"edgeupdatem\"; StartupType = \"Manual\" },\n      @{ Name = \"embeddedmode\"; StartupType = \"Manual\" },\n      @{ Name = \"fdPHost\"; StartupType = \"Manual\" },\n      @{ Name = \"fhsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"gpsvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"hidserv\"; StartupType = \"Manual\" },\n      @{ Name = \"icssvc\"; StartupType = \"Manual\" },\n      @{ Name = \"iphlpsvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"lfsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"lltdsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"lmhosts\"; StartupType = \"Manual\" },\n      @{ Name = \"mpssvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"msiserver\"; StartupType = \"Manual\" },\n      @{ Name = \"netprofm\"; StartupType = \"Manual\" },\n      @{ Name = \"nsi\"; StartupType = \"Automatic\" },\n      @{ Name = \"p2pimsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"p2psvc\"; StartupType = \"Manual\" },\n      @{ Name = \"perceptionsimulation\"; StartupType = \"Manual\" },\n      @{ Name = \"pla\"; StartupType = \"Manual\" },\n      @{ Name = \"seclogon\"; StartupType = \"Manual\" },\n      @{ Name = \"shpamsvc\"; StartupType = \"Disabled\" },\n      @{ Name = \"smphost\"; StartupType = \"Manual\" },\n      @{ Name = \"spectrum\"; StartupType = \"Manual\" },\n      @{ Name = \"sppsvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"ssh-agent\"; StartupType = \"Disabled\" },\n      @{ Name = \"svsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"swprv\"; StartupType = \"Manual\" },\n      @{ Name = \"tiledatamodelsvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"tzautoupdate\"; StartupType = \"Disabled\" },\n      @{ Name = \"uhssvc\"; StartupType = \"Disabled\" },\n      @{ Name = \"upnphost\"; StartupType = \"Manual\" },\n      @{ Name = \"vds\"; StartupType = \"Manual\" },\n      @{ Name = \"vm3dservice\"; StartupType = \"Automatic\" },\n      @{ Name = \"vmicguestinterface\"; StartupType = \"Manual\" },\n      @{ Name = \"vmicheartbeat\"; StartupType = \"Manual\" },\n      @{ Name = \"vmickvpexchange\"; StartupType = \"Manual\" },\n      @{ Name = \"vmicrdv\"; StartupType = \"Manual\" },\n      @{ Name = \"vmicshutdown\"; StartupType = \"Manual\" },\n      @{ Name = \"vmictimesync\"; StartupType = \"Manual\" },\n      @{ Name = \"vmicvmsession\"; StartupType = \"Manual\" },\n      @{ Name = \"vmicvss\"; StartupType = \"Manual\" },\n      @{ Name = \"vmvss\"; StartupType = \"Manual\" },\n      @{ Name = \"wbengine\"; StartupType = \"Manual\" },\n      @{ Name = \"wcncsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"webthreatdefsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"webthreatdefusersvc_*\"; StartupType = \"Automatic\" },\n      @{ Name = \"wercplsupport\"; StartupType = \"Manual\" },\n      @{ Name = \"wisvc\"; StartupType = \"Manual\" },\n      @{ Name = \"wlidsvc\"; StartupType = \"Manual\" },\n      @{ Name = \"wlpasvc\"; StartupType = \"Manual\" },\n      @{ Name = \"wmiApSrv\"; StartupType = \"Manual\" },\n      @{ Name = \"workfolderssvc\"; StartupType = \"Manual\" },\n      @{ Name = \"wscsvc\"; StartupType = \"Automatic\" },\n      @{ Name = \"wuauserv\"; StartupType = \"Manual\" },\n      @{ Name = \"wudfsvc\"; StartupType = \"Manual\" }\n  )\n  \n  foreach ($svc in $services) {\n      try {\n          Set-Service -Name $svc.Name -StartupType $svc.StartupType -ErrorAction Stop\n          Write-Output \"Set $($svc.Name) to $($svc.StartupType)\"\n      } catch {\n          Write-Warning \"Failed to set $($svc.Name): $_\"\n      }\n  }\n     "
      }
    },
    {
      "id": "set-time-utc",
      "title": "Set Time To UTC",
      "description": "Sets the system time to UTC, Great for dual booting",
      "category": ["General"],
      "recommended": false,
      "reversible": true,
      "docsurl": "https://docs.getsparkle.net/tweaks/set-time-utc",
      "source": "https://github.com/Parcoil/Sparkle/blob/v2/tweaks/set-time-utc/meta.json",
      "scripts": {
        "apply": "Set-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInformation\" -Name \"RealTimeIsUniversal\" -Value 1 -Type DWord -Force",
        "unapply": "Set-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInformation\" -Name \"RealTimeIsUniversal\" -Value 0 -Type DWord -Force"
      }
    },
    {
      "id": "set-win32-priority-separation",
      "title": "Set Win32 Priority Separation",
      "description": "Optimizes foreground app performance by modifying system process priority behavior.",
      "category": ["Performance"],
      "recommended": false,
      "reversible": true,
      "docsurl": "https://docs.getsparkle.net/tweaks/set-win32-priority-separation",
      "source": "https://github.com/Parcoil/Sparkle/blob/v2/tweaks/set-win32-priority-separation/meta.json",
      "scripts": {
        "apply": "Set-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\PriorityControl\" -Name \"Win32PrioritySeparation\" -Type DWord -Value 36\n",
        "unapply": "Set-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\PriorityControl\" -Name \"Win32PrioritySeparation\" -Type DWord -Value 2\n"
      }
    },
    {
      "id": "show-seconds-in-taskbar-clock",
      "title": "Show Seconds in Taskbar Clock",
      "description": "Enables the seconds next to the clock in the taskbar",
      "category": ["Appearance", "General"],
      "recommended": false,
      "reversible": true,
      "docsurl": "https://docs.getsparkle.net/tweaks/show-seconds-in-system-clock",
      "source": "https://github.com/Parcoil/Sparkle/blob/v2/tweaks/show-seconds-in-system-clock/meta.json",
      "scripts": {
        "apply": "Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\" -Name \"ShowSecondsInSystemClock\" -Type DWord -Value 1\n\n# Restart Explorer to apply changes\nStop-Process -Name explorer -Force\nStart-Process explorer\n",
        "unapply": "Set-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\" -Name \"ShowSecondsInSystemClock\" -Type DWord -Value 0\n\n# Restart Explorer to apply changes\nStop-Process -Name explorer -Force\nStart-Process explorer\n"
      }
    },
    {
      "id": "ultimate-performance-plan",
      "title": "Ultimate Performance Power Plan",
      "description": "Enables And Applys The Windows Ultimate Powerplan for better performance",
      "category": ["Performance", "Gaming"],
      "recommended": true,
      "reversible": true,
      "docsurl": "https://docs.getsparkle.net/tweaks/ultimate-performance-plan",
      "source": "https://github.com/Parcoil/Sparkle/blob/v2/tweaks/ultimate-performance-plan/meta.json",
      "scripts": {
        "apply": "$ultimatePlan = powercfg -l | Select-String \"Ultimate Performance\"\n  \n  if (-not $ultimatePlan) {\n      Write-Host \"Ultimate Performance plan not found. Creating...\" \n      powercfg -duplicatescheme e9a42b02-d5df-448d-aa00-03f14749eb61\n  } else {\n      Write-Host \"Ultimate Performance plan already exists.\" \n  }\n  \n  # Get the GUID of the Ultimate Performance plan\n  $ultimatePlanGUID = (powercfg -l | Select-String \"Ultimate Performance\").ToString().Split()[3]\n  \n  # Set it as the active plan\n  powercfg -setactive $ultimatePlanGUID\n  \n  Write-Host \"Ultimate Performance power plan is now active.\" ",
        "unapply": "$balancedGUID = \"381b4222-f694-41f0-9685-ff5bb260df2e\"\n  \n  # check if the Balanced plan exists\n  $balancedExists = powercfg -l | Select-String $balancedGUID\n  \n  if ($balancedExists) {\n      powercfg -setactive $balancedGUID\n      Write-Host \"Balanced power plan is now active.\" \n  } else {\n      Write-Host \"Balanced power plan not found. Creating a new Balanced plan...\" \n      powercfg -duplicatescheme $balancedGUID\n      powercfg -setactive $balancedGUID\n      Write-Host \"Balanced power plan created and activated.\" \n  }"
      }
    },
    {
      "id": "Unlock AI Services",
      "title": "unlock-ai-services",
      "description": "Changes the system region to USA and modifies the hosts file to unlock access to some AI services. This can be reverted by un-applying the tweak.",
      "category": "Network",
      "recommended": false,
      "reversible": true,
      "docsurl": "https://docs.getsparkle.net/tweaks/unlock-ai-services",
      "source": "https://github.com/Parcoil/Sparkle/blob/v2/tweaks/unlock-ai-services/meta.json",
      "scripts": {
        "apply": "$hostsFile = \"C:\\Windows\\System32\\drivers\\etc\\hosts\"\n$marker = \"# Block region check for AI services (added by Sparkle)\"\n\n# Check if the block already exists\nif (-not (Select-String -Path $hostsFile -Pattern $marker -Quiet)) {\n    # Lines to add\n    $entries = @\"\n\n$marker\n0.0.0.0 geo.prod.do.dsp.mp.microsoft.com\n0.0.0.0 checkappexec.microsoft.com\n0.0.0.0 watson.telemetry.microsoft.com\n0.0.0.0 v10.events.data.microsoft.com\n0.0.0.0 v20.events.data.microsoft.com\n\"@\n\n    # Add the lines to the hosts file\n    Add-Content -Path $hostsFile -Value $entries\n}\n\n# Change system locale\nSet-WinSystemLocale en-US\nSet-WinUserLanguageList en-US -Force",
        "unapply": "$hostsFile = \"C:\\Windows\\System32\\drivers\\etc\\hosts\"\n$marker = \"# Block region check for AI services (added by Sparkle)\"\n\n# Check if the block exists\nif (Select-String -Path $hostsFile -Pattern $marker -Quiet) {\n    # Read the file content\n    $content = Get-Content -Path $hostsFile\n\n    # Find the start and end of the block\n    $startLine = $content | Select-String -Pattern $marker | Select -First 1 -ExpandProperty LineNumber\n    $endLine = $startLine + 5 # 1 marker line + 4 hosts entries\n\n    # Remove the block\n    $newContent = $content[0..($startLine - 2)] + $content[$endLine..($content.Length - 1)]\n\n    # Write the new content back to the file\n    Set-Content -Path $hostsFile -Value $newContent\n}\n\n# Revert system locale\nSet-WinSystemLocale ru-RU\nSet-WinUserLanguageList ru-RU -Force\n"
      }
    }
  ]
}
